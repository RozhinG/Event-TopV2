{"ast":null,"code":"var _jsxFileName = \"/Users/attari.v/Documents/GitHub/Event-Top/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Badge, Dropdown, Modal, Alert } from 'react-bootstrap';\nimport './App.css';\n//import ReactDOM from 'react-dom';\nimport { calculateTotalWithFee } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tables, setTables] = useState(Array.from({\n    length: 30\n  }, () => ({\n    reservations: [],\n    capacity: 8\n  })));\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n  const [selectedSpots, setSelectedSpots] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  //const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(1).fill('standard'));\n  const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(selectedSpots).fill('select'));\n  const [showTicketFields, setShowTicketFields] = useState(false);\n  const [totalTicketPrice, setTotalTicketPrice] = useState(0);\n  const [purchaseTimeout, setPurchaseTimeout] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(10 * 60); // 5 minutes in seconds\n  const [fee, setFee] = useState(0);\n  const [feePercentage, setFeePercentage] = useState(6); // Set your desired fee percentage here\n  const [transfeePercentage, setTransFeePercentage] = useState(2.9); // Set your desired fee percentage here\n\n  // Initialize newTotalTicketPrice state\n  const [newTotalTicketPrice, setNewTotalTicketPrice] = useState(0);\n  const resetState = () => {\n    setTables(Array.from({\n      length: 30\n    }, () => ({\n      reservations: [],\n      capacity: 8\n    })));\n    setReservationText('');\n    setSelectedTable(1);\n    setSelectedSpots(1);\n    setShowModal(false);\n    setSelectedTicketTypes(Array(1).fill('select'));\n    setShowTicketFields(false);\n    setTotalTicketPrice(0);\n    setPurchaseTimeout(null);\n    setRemainingTime(10 * 60);\n    setFee(0);\n    setFeePercentage(6);\n    setTransFeePercentage(2.9);\n    setNewTotalTicketPrice(0);\n  };\n  const ticketPrices = {\n    standard: 100,\n    VIP: 120,\n    student: 85,\n    kids: 60\n  };\n  const handleTicketTypeChange = (type, index) => {\n    const updatedTicketTypes = [...selectedTicketTypes];\n\n    // Check if the selected table is in the specified range\n    const isVipTable = [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable);\n\n    // If the selected table is a VIP table, force the ticket type to be VIP\n    if (isVipTable && type !== 'VIP') {\n      alert('Only VIP tickets are allowed for this table.');\n      updatedTicketTypes[index] = 'VIP';\n    } else {\n      updatedTicketTypes[index] = type;\n    }\n    setSelectedTicketTypes(updatedTicketTypes);\n    const newTotalTicketPrice = updatedTicketTypes.reduce((total, t) => total + ticketPrices[t], 0);\n    setTotalTicketPrice(newTotalTicketPrice);\n    clearTimeout(purchaseTimeout);\n    const timeoutId = setTimeout(() => {\n      handleCloseModal();\n      alert('Purchase session expired. Please try again.');\n    }, 5 * 60 * 1000);\n    setPurchaseTimeout(timeoutId);\n  };\n  const handleAddReservation = () => {\n    const table = tables[selectedTable - 1];\n    if (selectedSpots <= table.capacity && selectedSpots <= 8) {\n      const isVipTicketAlreadyReserved = table.reservations.some(reservation => reservation.ticketTypes.includes('VIP'));\n      if (isVipTicketAlreadyReserved && [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable)) {\n        alert(\"VIP ticket already reserved for this table.\");\n        return;\n      }\n      setShowModal(true);\n      setShowTicketFields(true);\n    } else if (selectedSpots > 8) {\n      alert(\"You can't reserve more than 8 spots for a single table.\");\n    } else {\n      alert(`Only ${table.capacity} spots available for this table.`);\n    }\n  };\n\n  //const handleStoreData = async () => {\n  //setShowModal(false);\n  //setShowTicketFields(false);\n\n  //if (!buyerName || !buyerSurname) {\n  //alert('Please enter both name and surname.');\n  //return;\n  //}\n\n  //try {\n  //const response = fetch('/storeData', {\n  //method: 'POST',\n  //headers: {\n  //'Content-Type': 'application/',\n  //},\n  //body: JSON.stringify({\n  //buyerName: buyerName,\n  //buyerSurname: buyerSurname,\n  //// Add any other data you want to send to the server\n  //}),\n  //});\n\n  //if (response.ok) {\n  //const result = await response.json();\n  //try{\n  //window.location.href = result.paymentGatewayUrl;\n  //}\n  //catch(e)\n  //{\n  //console.error('Error:', e);\n  //}\n  //} else {\n  //alert('Error storing data Please try again.');\n  //}\n  //} catch (error) {\n  //console.error('Error:', error);\n  //alert('An unexpected error occurred. Please try again later.');\n  //}\n\n  //setReservationText('');\n  //setSelectedSpots(1);\n  //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  //setTotalTicketPrice(0);\n  //clearTimeout(purchaseTimeout);\n  //};\n\n  //const handleCloseModal = async () => {\n  //setShowModal(false);\n  //setShowTicketFields(false);\n\n  //const buyerName = document.getElementById('buyerName').value;\n  //const buyerSurname = document.getElementById('buyerSurname').value;\n\n  //if (!buyerName || !buyerSurname) {\n  //alert('Please enter both name and surname.');\n  //return;\n  //}\n\n  //// Store reservation data in localStorage\n  //const reservationData = {\n  //tableNumber: selectedTable,\n  //reservationText: reservationText,\n  //buyerName: buyerName,\n  //buyerSurname: buyerSurname,\n  //ticketTypes: selectedTicketTypes,\n  //totalTicketPrice: totalTicketPrice,\n  //};\n\n  //// Log the reservation data to the console\n  //console.log('Reservation Data:', reservationData);\n\n  //// Show a confirmation message to the user\n  //alert('Transfering to payment Gateway!');\n\n  //localStorage.setItem('reservationData', JSON.stringify(reservationData)); //??????\n\n  //try {\n  //// Redirect to the payment gateway\n  //const response = await fetch('https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID', {\n  //<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>\n\n  //method: 'POST',\n  //headers: {\n  //'Content-Type': 'application/json',\n  //},\n  //body: JSON.stringify({\n  //// Include any necessary data for the purchase\n  //// Example: reservationData\n  //}),\n  //});\n\n  //if (response.ok) {\n  ////const result = await response.json();\n  ////window.location.href = result.paymentGatewayUrl;\n  //alert('Payment successful.');\n  //} else {\n  //alert('Error initiating purchase. Please try again.');\n  //}\n  //} catch (error) {\n  //console.error('Error:', error);\n  //alert('An unexpected error occurred. Please try again later.');\n  //}\n\n  //setReservationText('');\n  //setSelectedSpots(1);\n  //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  //setTotalTicketPrice(0);\n  //clearTimeout(purchaseTimeout);\n  //};\n\n  const handleCloseModal = async () => {\n    setShowModal(false);\n    setShowTicketFields(false);\n    const buyerName = document.getElementById('buyerName').value;\n    const buyerSurname = document.getElementById('buyerSurname').value;\n    if (!buyerName || !buyerSurname) {\n      alert('Please enter both name and surname.');\n      return;\n    }\n\n    // Use PayPal SDK to handle payment\n    const paypalScript = document.createElement('script');\n    //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=Ae4yN7YaTyetmQIWanu2GQax0IAwJulSm2jze42lK0aDZRckVVUv35BBzWLE7RhMdAzHar2b2XzyiY-8&currency=CAD`;\n    paypalScript.src = `https://www.paypal.com/sdk/js?client-id=Ae4yN7YaTyetmQIWanu2GQax0IAwJulSm2jze42lK0aDZRckVVUv35BBzWLE7RhMdAzHar2b2XzyiY-8&buyer-country=CA&currency=CAD`;\n    paypalScript.async = true;\n    paypalScript.onload = () => {\n      handlePayPalPayment();\n    };\n    document.body.appendChild(paypalScript);\n    setReservationText('');\n    setSelectedSpots(1);\n    setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    setTotalTicketPrice(0);\n    clearTimeout(purchaseTimeout);\n  };\n  const handlePayPalPayment = () => {\n    // Replace 'YOUR_CLIENT_ID' with your PayPal client ID\n    window.paypal.Buttons({\n      createOrder: function (data, actions) {\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: totalTicketPrice\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(function (details) {\n          // Handle the successful payment here\n          alert('Payment successful! Transaction completed by ' + details.payer.name.given_name);\n        });\n      },\n      onError: function (err) {\n        // Handle errors here\n        console.error('PayPal error:', err);\n        alert('Payment failed. Please try again.');\n      },\n      style: {\n        layout: 'vertical',\n        color: 'gold',\n        shape: 'rect',\n        label: 'paypal'\n      }\n    }).render('#paypal-button-container');\n  };\n  const calculateTableColor = table => {\n    if (table.capacity === 0) {\n      return 'table-full';\n    } else if (table.capacity <= table.reservations.length) {\n      return 'table-semi-empty';\n    } else {\n      return 'table-empty';\n    }\n  };\n  const getAvailableSeats = table => {\n    return table.capacity - table.reservations.length;\n  };\n\n  // ... (previous code)\n\n  useEffect(() => {\n    // Calculate the total ticket price including the fee using the utility function\n    const {\n      totalWithFee,\n      trnsfee,\n      feeAmount,\n      totalfee\n    } = calculateTotalWithFee(selectedTicketTypes, ticketPrices, transfeePercentage, feePercentage);\n\n    // Set the total ticket price\n    setTotalTicketPrice(totalWithFee);\n\n    //setFee(feeAmount);\n\n    //setTransFeePercentage(trnsfee);\n\n    //console.log('feePercentage:', feePercentage);\n\n    const timeoutId = setTimeout(() => {\n      handleCloseModal();\n      alert('Purchase session expired. Please try again.');\n    }, remainingTime * 1000);\n\n    //setPurchaseTimeout(timeoutId);\n\n    // Update the remaining time every second\n    const intervalId = setInterval(() => {\n      setRemainingTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    }, 1000);\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(intervalId);\n    };\n  }, [selectedTicketTypes, handleCloseModal, ticketPrices, remainingTime, feePercentage]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-layout\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-table-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-3\",\n            children: \"Select Table:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"primary\",\n              id: \"dropdown-basic\",\n              children: [\"Table \", selectedTable]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: Array.from({\n                length: 30\n              }).map((_, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => setSelectedTable(index + 1),\n                children: [\"Table \", index + 1]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enter-seats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-3\",\n            children: \"Enter number of seats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"selectedSpots\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Number of spots\",\n              value: selectedSpots,\n              onChange: e => {\n                const newValue = e.target.value !== '' ? Math.max(1, parseInt(e.target.value, 10)) : '';\n                setSelectedSpots(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 1\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleAddReservation,\n          className: \"rectangle-button mb-3\",\n          children: \"Add Reservation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tables.map((table, tableIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `circle-button task-item ${calculateTableColor(table)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(tableIndex + 1) ? `VIP Table ${tableIndex + 1}` : `Table ${tableIndex + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 9\n            }, this), \" (\", table.capacity, \" seats)\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: table.reservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              variant: \"info\",\n              className: \"mr-1\",\n              children: [reservation.name, \" (\", reservation.spots, \" spots)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 408,\n              columnNumber: 11\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 7\n          }, this)]\n        }, tableIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 5\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      dialogClassName: \"custom-modal-width\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Select Tickets - Table \", selectedTable, \" (\", getAvailableSeats(tables[selectedTable - 1]), \" available seats)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: showTicketFields && /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"Note: Tickets are non-refundable.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerSurname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }, this), [...Array(selectedSpots)].map((_, index) => /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: `ticketType-${index + 1}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: `Ticket Type for Seat ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-2\",\n                children: `Price: $${ticketPrices[selectedTicketTypes[index]]}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: selectedTicketTypes[index],\n                onChange: e => handleTicketTypeChange(e.target.value, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"select\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 454,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"standard\",\n                  children: \"Standard ($100)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 455,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"VIP\",\n                  children: \"VIP ($120)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 456,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"student\",\n                  children: \"Student ($85)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"kids\",\n                  children: \"Kids ($60)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 458,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Transcation Fee: $\", totalTicketPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Total Ticket Price + Fee: $\", totalTicketPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 471,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => {\n            resetState(); // Reset all state variables\n            setShowModal(false);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleCloseModal,\n          children: \"Purchase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-timer\",\n          children: [\"Time Remaining: \", Math.floor(remainingTime / 60), \":\", (remainingTime % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 1\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-layout\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"paypal-button-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 500,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"+eD/Wg3tvHCh4/HKiQdXGKcy46Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Button","Badge","Dropdown","Modal","Alert","calculateTotalWithFee","jsxDEV","_jsxDEV","App","_s","tables","setTables","Array","from","length","reservations","capacity","reservationText","setReservationText","selectedTable","setSelectedTable","selectedSpots","setSelectedSpots","showModal","setShowModal","selectedTicketTypes","setSelectedTicketTypes","fill","showTicketFields","setShowTicketFields","totalTicketPrice","setTotalTicketPrice","purchaseTimeout","setPurchaseTimeout","remainingTime","setRemainingTime","fee","setFee","feePercentage","setFeePercentage","transfeePercentage","setTransFeePercentage","newTotalTicketPrice","setNewTotalTicketPrice","resetState","ticketPrices","standard","VIP","student","kids","handleTicketTypeChange","type","index","updatedTicketTypes","isVipTable","includes","alert","reduce","total","t","clearTimeout","timeoutId","setTimeout","handleCloseModal","handleAddReservation","table","isVipTicketAlreadyReserved","some","reservation","ticketTypes","buyerName","document","getElementById","value","buyerSurname","paypalScript","createElement","src","async","onload","handlePayPalPayment","body","appendChild","window","paypal","Buttons","createOrder","data","actions","order","create","purchase_units","amount","onApprove","capture","then","details","payer","name","given_name","onError","err","console","error","style","layout","color","shape","label","render","calculateTableColor","getAvailableSeats","totalWithFee","trnsfee","feeAmount","totalfee","intervalId","setInterval","prevTime","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","id","Menu","map","_","Item","onClick","Group","controlId","Control","placeholder","onChange","e","newValue","target","Math","max","parseInt","tableIndex","pill","spots","show","onHide","dialogClassName","Header","closeButton","Title","Body","Label","as","Footer","floor","toString","padStart","_c","$RefreshReg$"],"sources":["/Users/attari.v/Documents/GitHub/Event-Top/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Badge, Dropdown, Modal, Alert } from 'react-bootstrap';\nimport './App.css';\n//import ReactDOM from 'react-dom';\nimport { calculateTotalWithFee } from './utils';\n\nfunction App() {\n  const [tables, setTables] = useState(Array.from({ length: 30 }, () => ({ reservations: [], capacity: 8 })));\n\n\n\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n  const [selectedSpots, setSelectedSpots] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  //const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(1).fill('standard'));\n  const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(selectedSpots).fill('select'));\n  const [showTicketFields, setShowTicketFields] = useState(false);\n  const [totalTicketPrice, setTotalTicketPrice] = useState(0);\n  const [purchaseTimeout, setPurchaseTimeout] = useState(null);\n\n  const [remainingTime, setRemainingTime] = useState(10 * 60); // 5 minutes in seconds\n  const [fee, setFee] = useState(0);\n  const [feePercentage, setFeePercentage] = useState(6); // Set your desired fee percentage here\n  const [transfeePercentage, setTransFeePercentage] = useState(2.9); // Set your desired fee percentage here\n\n  \n\n  // Initialize newTotalTicketPrice state\n  const [newTotalTicketPrice, setNewTotalTicketPrice] = useState(0);\n\n  const resetState = () => {\n    setTables(Array.from({ length: 30 }, () => ({ reservations: [], capacity: 8 })));\n    setReservationText('');\n    setSelectedTable(1);\n    setSelectedSpots(1);\n    setShowModal(false);\n    setSelectedTicketTypes(Array(1).fill('select'));\n    setShowTicketFields(false);\n    setTotalTicketPrice(0);\n    setPurchaseTimeout(null);\n    setRemainingTime(10 * 60);\n    setFee(0);\n    setFeePercentage(6);\n    setTransFeePercentage(2.9);\n    setNewTotalTicketPrice(0);\n  };  \n  \n  const ticketPrices = {\n    standard: 100,\n    VIP: 120,\n    student: 85,\n    kids: 60,\n  };\n\n\n\nconst handleTicketTypeChange = (type, index) => {\n  const updatedTicketTypes = [...selectedTicketTypes];\n  \n  // Check if the selected table is in the specified range\n  const isVipTable = [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable);\n\n  // If the selected table is a VIP table, force the ticket type to be VIP\n  if (isVipTable && type !== 'VIP') {\n    alert('Only VIP tickets are allowed for this table.');\n    updatedTicketTypes[index] = 'VIP';\n  } else {\n    updatedTicketTypes[index] = type;\n  }\n\n  setSelectedTicketTypes(updatedTicketTypes);\n\n  const newTotalTicketPrice = updatedTicketTypes.reduce((total, t) => total + ticketPrices[t], 0);\n  setTotalTicketPrice(newTotalTicketPrice);\n\n  clearTimeout(purchaseTimeout);\n  const timeoutId = setTimeout(() => {\n    handleCloseModal();\n    alert('Purchase session expired. Please try again.');\n  }, 5 * 60 * 1000);\n  setPurchaseTimeout(timeoutId);\n};\n\n\n\nconst handleAddReservation = () => {\n  const table = tables[selectedTable - 1];\n\n  if (selectedSpots <= table.capacity && selectedSpots <= 8) {\n    const isVipTicketAlreadyReserved = table.reservations.some(reservation =>\n      reservation.ticketTypes.includes('VIP')\n    );\n\n    if (isVipTicketAlreadyReserved && [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable)) {\n      alert(\"VIP ticket already reserved for this table.\");\n      return;\n    }\n\n    setShowModal(true);\n    setShowTicketFields(true);\n  } else if (selectedSpots > 8) {\n    alert(\"You can't reserve more than 8 spots for a single table.\");\n  } else {\n    alert(`Only ${table.capacity} spots available for this table.`);\n  }\n};\n\n\n  \n  \n  \n\n  //const handleStoreData = async () => {\n    //setShowModal(false);\n    //setShowTicketFields(false);\n    \n    //if (!buyerName || !buyerSurname) {\n      //alert('Please enter both name and surname.');\n      //return;\n    //}\n    \n    //try {\n      //const response = fetch('/storeData', {\n        //method: 'POST',\n        //headers: {\n          //'Content-Type': 'application/',\n        //},\n        //body: JSON.stringify({\n          //buyerName: buyerName,\n          //buyerSurname: buyerSurname,\n          //// Add any other data you want to send to the server\n        //}),\n      //});\n      \n      //if (response.ok) {\n        //const result = await response.json();\n        //try{\n\t\t\t//window.location.href = result.paymentGatewayUrl;\n\t\t//}\n\t\t//catch(e)\n\t\t//{\n\t\t//console.error('Error:', e);\n\t\t//}\n      //} else {\n        //alert('Error storing data Please try again.');\n      //}\n    //} catch (error) {\n      //console.error('Error:', error);\n      //alert('An unexpected error occurred. Please try again later.');\n    //}\n    \n    //setReservationText('');\n    //setSelectedSpots(1);\n    //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    //setTotalTicketPrice(0);\n    //clearTimeout(purchaseTimeout);\n  //};\n\n\n  //const handleCloseModal = async () => {\n    //setShowModal(false);\n    //setShowTicketFields(false);\n\n\t//const buyerName = document.getElementById('buyerName').value;\n\t//const buyerSurname = document.getElementById('buyerSurname').value;\n\n    //if (!buyerName || !buyerSurname) {\n      //alert('Please enter both name and surname.');\n      //return;\n    //}\n\n    //// Store reservation data in localStorage\n    //const reservationData = {\n      //tableNumber: selectedTable,\n      //reservationText: reservationText,\n      //buyerName: buyerName,\n      //buyerSurname: buyerSurname,\n      //ticketTypes: selectedTicketTypes,\n      //totalTicketPrice: totalTicketPrice,\n    //};\n\n    //// Log the reservation data to the console\n    //console.log('Reservation Data:', reservationData);\n\n    //// Show a confirmation message to the user\n    //alert('Transfering to payment Gateway!');\n\n    //localStorage.setItem('reservationData', JSON.stringify(reservationData)); //??????\n\n    //try {\n      //// Redirect to the payment gateway\n      //const response = await fetch('https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID', {\n\t\t  //<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>\n\n        //method: 'POST',\n        //headers: {\n          //'Content-Type': 'application/json',\n        //},\n        //body: JSON.stringify({\n          //// Include any necessary data for the purchase\n          //// Example: reservationData\n        //}),\n      //});\n\n      //if (response.ok) {\n        ////const result = await response.json();\n        ////window.location.href = result.paymentGatewayUrl;\n        //alert('Payment successful.');\n      //} else {\n        //alert('Error initiating purchase. Please try again.');\n      //}\n    //} catch (error) {\n      //console.error('Error:', error);\n      //alert('An unexpected error occurred. Please try again later.');\n    //}\n\n    //setReservationText('');\n    //setSelectedSpots(1);\n    //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    //setTotalTicketPrice(0);\n    //clearTimeout(purchaseTimeout);\n  //};\n  \n  \n  \n\n\nconst handleCloseModal = async () => {\n  setShowModal(false);\n  setShowTicketFields(false);\n\n  const buyerName = document.getElementById('buyerName').value;\n  const buyerSurname = document.getElementById('buyerSurname').value;\n\n  if (!buyerName || !buyerSurname) {\n    alert('Please enter both name and surname.');\n    return;\n  }\n\n  // Use PayPal SDK to handle payment\n  const paypalScript = document.createElement('script');\n  //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=Ae4yN7YaTyetmQIWanu2GQax0IAwJulSm2jze42lK0aDZRckVVUv35BBzWLE7RhMdAzHar2b2XzyiY-8&currency=CAD`;\n  paypalScript.src = `https://www.paypal.com/sdk/js?client-id=Ae4yN7YaTyetmQIWanu2GQax0IAwJulSm2jze42lK0aDZRckVVUv35BBzWLE7RhMdAzHar2b2XzyiY-8&buyer-country=CA&currency=CAD`;\n  paypalScript.async = true;\n  paypalScript.onload = () => {\n    handlePayPalPayment();\n  };\n  document.body.appendChild(paypalScript);\n\n  setReservationText('');\n  setSelectedSpots(1);\n  setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  setTotalTicketPrice(0);\n  clearTimeout(purchaseTimeout);\n};\n\n\n  const handlePayPalPayment = () => {\n    // Replace 'YOUR_CLIENT_ID' with your PayPal client ID\n    window.paypal\n      .Buttons({\n        createOrder: function (data, actions) {\n          return actions.order.create({\n            purchase_units: [\n              {\n                amount: {\n                  value: totalTicketPrice,\n                },\n              },\n            ],\n          });\n        },\n        onApprove: function (data, actions) {\n          return actions.order.capture().then(function (details) {\n            // Handle the successful payment here\n            alert('Payment successful! Transaction completed by ' + details.payer.name.given_name);\n          });\n        },\n        onError: function (err) {\n          // Handle errors here\n          console.error('PayPal error:', err);\n          alert('Payment failed. Please try again.');\n        },\n          style: {\n    layout: 'vertical',\n    color:  'gold',\n    shape:  'rect',\n    label:  'paypal'\n  },\n      })\n      .render('#paypal-button-container');\n  };\n\n\n\n\n\n\n\n\n\n  const calculateTableColor = (table) => {\n    if (table.capacity === 0) {\n      return 'table-full';\n    } else if (table.capacity <= table.reservations.length) {\n      return 'table-semi-empty';\n    } else {\n      return 'table-empty';\n    }\n  };\n\n  const getAvailableSeats = (table) => {\n    return table.capacity - table.reservations.length;\n  };\n\n\n// ... (previous code)\n\nuseEffect(() => {\n\n  // Calculate the total ticket price including the fee using the utility function\n  const { totalWithFee, trnsfee, feeAmount, totalfee } = calculateTotalWithFee(selectedTicketTypes, ticketPrices, transfeePercentage, feePercentage);\n\n  // Set the total ticket price\n  setTotalTicketPrice(totalWithFee);\n\n  //setFee(feeAmount);\n\n  //setTransFeePercentage(trnsfee);\n  \n  //console.log('feePercentage:', feePercentage);\n  \n  const timeoutId = setTimeout(() => {\n    handleCloseModal();\n    alert('Purchase session expired. Please try again.');\n  }, remainingTime * 1000);\n\n  //setPurchaseTimeout(timeoutId);\n\n  // Update the remaining time every second\n  const intervalId = setInterval(() => {\n    setRemainingTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\n  }, 1000);\n\n  return () => {\n    clearTimeout(timeoutId);\n    clearInterval(intervalId);\n  };\n}, [selectedTicketTypes, handleCloseModal, ticketPrices, remainingTime, feePercentage]);\n\n\nreturn (\n  <Container className=\"mt-3\">\n    {/* Main container for the component */}\n    <div className=\"rectangle-layout\">\n      <Form>\n        {/* Select Table section */}\n        <div className=\"select-table-section\">\n          <h5 className=\"mb-3\">Select Table:</h5>\n          <Dropdown>\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n              Table {selectedTable}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {Array.from({ length: 30 }).map((_, index) => (\n                <Dropdown.Item key={index} onClick={() => setSelectedTable(index + 1)}>\n                  Table {index + 1}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        {/* Enter number of seats section */}\n        <div className=\"enter-seats-section\">\n          <h5 className=\"mb-3\">Enter number of seats:</h5>\n          <Form.Group controlId=\"selectedSpots\">\n\n<Form.Control\n  type=\"number\"\n  placeholder=\"Number of spots\"\n  value={selectedSpots}\n  onChange={(e) => {\n    const newValue = e.target.value !== '' ? Math.max(1, parseInt(e.target.value, 10)) : '';\n    setSelectedSpots(newValue);\n  }}\n/>\n\n\n          </Form.Group>\n        </div>\n        {/* Button to add reservation */}\n        <Button variant=\"primary\" onClick={handleAddReservation} className=\"rectangle-button mb-3\">\n          Add Reservation\n        </Button>\n      </Form>\n      {/* Task list */}\n{/* Task list */}\n<div className=\"task-list\">\n  {tables.map((table, tableIndex) => (\n    <div key={tableIndex} className={`circle-button task-item ${calculateTableColor(table)}`}>\n      <div>\n        <strong>{[1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(tableIndex + 1) ? `VIP Table ${tableIndex + 1}` : `Table ${tableIndex + 1}`}</strong> ({table.capacity} seats)\n      </div>\n      <div>\n        {table.reservations.map((reservation, index) => (\n          <Badge key={index} pill variant=\"info\" className=\"mr-1\">\n            {reservation.name} ({reservation.spots} spots)\n          </Badge>\n        ))}\n      </div>\n    </div>\n  ))}\n</div>\n\n\n    </div>\n    {/* Reservation modal */}\n    <Modal show={showModal} onHide={handleCloseModal} dialogClassName=\"custom-modal-width\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Select Tickets - Table {selectedTable} ({getAvailableSeats(tables[selectedTable - 1])} available seats)\n        </Modal.Title>\n      </Modal.Header>\n      {/* Modal body */}\n      <Modal.Body>\n        {showTicketFields && (\n          <Form>\n            {/* Alert */}\n            <Alert variant=\"warning\">Note: Tickets are non-refundable.</Alert>\n            {/* Buyer's name input */}\n            <Form.Group controlId=\"buyerName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter your name\" />\n            </Form.Group>\n            {/* Buyer's surname input */}\n            <Form.Group controlId=\"buyerSurname\">\n              <Form.Label>Surname</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter your surname\" />\n            </Form.Group>\n            {/* Ticket type selection for each seat */}\n            {[...Array(selectedSpots)].map((_, index) => (\n              <Form.Group key={index} controlId={`ticketType-${index + 1}`}>\n                <Form.Label>{`Ticket Type for Seat ${index + 1}`}</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <span className=\"mr-2\">{`Price: $${ticketPrices[selectedTicketTypes[index]]}`}</span>\n                  {/* Dropdown for selecting ticket type */}\n                  <Form.Control\n\t\t\t\t  as=\"select\"\n\t\t\t\t  value={selectedTicketTypes[index]}\n\t\t\t\t  onChange={(e) => handleTicketTypeChange(e.target.value, index)}\n\t\t\t\t>\n\t\t\t\t  <option value=\"select\">Select</option>\n\t\t\t\t  <option value=\"standard\">Standard ($100)</option>\n\t\t\t\t  <option value=\"VIP\">VIP ($120)</option>\n\t\t\t\t  <option value=\"student\">Student ($85)</option>\n\t\t\t\t  <option value=\"kids\">Kids ($60)</option>\n\t\t\t\t</Form.Control>\n                  \n\n                </div>\n              </Form.Group>\n            ))}\n            {/* Notes section */}\n            <div className=\"mt-3\">\n              <strong>Notes:</strong>\n              <ul>\n                <li>Transcation Fee: ${totalTicketPrice}</li>\n                {/* <li>Fee (6%): ${totalTicketPrice}</li> */}\n                <li>Total Ticket Price + Fee: ${totalTicketPrice}</li>\n              </ul>\n            </div>\n          </Form>\n        )}\n        {/* PayPal button container */}\n        {/* <div id=\"paypal-button-container\"></div> */}\n      </Modal.Body>\n      {/* Modal footer */}\n<Modal.Footer>\n  {/* Close button */}\n  <button type=\"button\" className=\"btn btn-secondary\" onClick={() => {\n    resetState(); // Reset all state variables\n    setShowModal(false);\n  }}>\n    Close\n  </button>\n  {/* Purchase button */}\n  <Button variant=\"success\" onClick={handleCloseModal}>\n    Purchase\n  </Button>\n  {/* Countdown timer */}\n  <div className=\"countdown-timer\">Time Remaining: {Math.floor(remainingTime / 60)}:{(remainingTime % 60).toString().padStart(2, '0')}</div>\n</Modal.Footer>\n\n\n\n    </Modal>\n    {/* Additional container for PayPal button */}\n    <div className=\"rectangle-layout\">\n      <div id=\"paypal-button-container\"></div>\n    </div>\n  </Container>\n);\n\n\n\n\n\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}