{"ast":null,"code":"var _jsxFileName = \"/Users/attari.v/Documents/GitHub/Event-Top/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Badge, Dropdown, Modal, Alert } from 'react-bootstrap';\nimport './App.css';\n//import ReactDOM from 'react-dom';\nimport { calculateTotalWithFee } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tables, setTables] = useState(Array.from({\n    length: 30\n  }, () => ({\n    reservations: [],\n    capacity: 8\n  })));\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n  const [selectedSpots, setSelectedSpots] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  //const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(1).fill('standard'));\n  const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(selectedSpots).fill('select'));\n  const [showTicketFields, setShowTicketFields] = useState(false);\n  const [totalTicketPrice, setTotalTicketPrice] = useState(0);\n  const [purchaseTimeout, setPurchaseTimeout] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(0.5 * 60); // 5 minutes in seconds\n  const [fee, setFee] = useState(0);\n  const [feePercentage, setFeePercentage] = useState(6); // Set your desired fee percentage here\n  const [transfeePercentage, setTransFeePercentage] = useState(2.9); // Set your desired fee percentage here\n\n  // Assuming you have a state variable and its setter function for buyer's email\n  const [buyerEmail, setBuyerEmail] = useState('');\n\n  // Initialize newTotalTicketPrice state\n  const [newTotalTicketPrice, setNewTotalTicketPrice] = useState(0);\n  const [purchasedItems, setPurchasedItems] = useState([]);\n  const resetState = () => {\n    setTables(Array.from({\n      length: 30\n    }, () => ({\n      reservations: [],\n      capacity: 8\n    })));\n    setReservationText('');\n    setSelectedTable(1);\n    setSelectedSpots(1);\n    setShowModal(false);\n    setSelectedTicketTypes(Array(1).fill('select'));\n    setShowTicketFields(false);\n    setTotalTicketPrice(0);\n    setPurchaseTimeout(null);\n    setRemainingTime(10 * 60);\n    setFee(0);\n    setFeePercentage(6);\n    setTransFeePercentage(2.9);\n    setNewTotalTicketPrice(0);\n  };\n  const ticketPrices = {\n    standard: 100,\n    VIP: 120,\n    student: 1,\n    kids: 1\n  };\n  const handleTicketTypeChange = (type, index) => {\n    const updatedTicketTypes = [...selectedTicketTypes];\n\n    // Check if the selected table is in the specified range\n    const isVipTable = [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable);\n\n    // If the selected table is a VIP table, force the ticket type to be VIP\n    if (isVipTable && type !== 'VIP') {\n      alert('Only VIP tickets are allowed for this table.');\n      updatedTicketTypes[index] = 'VIP';\n    } else {\n      updatedTicketTypes[index] = type;\n    }\n    setSelectedTicketTypes(updatedTicketTypes);\n    const newTotalTicketPrice = updatedTicketTypes.reduce((total, t) => total + ticketPrices[t], 0);\n    setTotalTicketPrice(newTotalTicketPrice);\n    clearTimeout(purchaseTimeout);\n    const timeoutId = setTimeout(() => {\n      handleCloseModal();\n      // Reload the app when the timer ends\n      alert('Purchase session expired. Please try again.');\n      window.location.reload();\n    }, remainingTime * 1000);\n    setPurchaseTimeout(timeoutId);\n  };\n  const handleAddReservation = () => {\n    const table = tables[selectedTable - 1];\n    if (selectedSpots <= table.capacity && selectedSpots <= 8) {\n      const isVipTicketAlreadyReserved = table.reservations.some(reservation => reservation.ticketTypes.includes('VIP'));\n      if (isVipTicketAlreadyReserved && [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable)) {\n        alert(\"VIP ticket already reserved for this table.\");\n        return;\n      }\n      setShowModal(true);\n      setShowTicketFields(true);\n    } else if (selectedSpots > 8) {\n      alert(\"You can't reserve more than 8 spots for a single table.\");\n    } else {\n      alert(`Only ${table.capacity} spots available for this table.`);\n    }\n    setShowModal(true);\n    setShowTicketFields(true);\n  };\n\n  //const handleStoreData = async () => {\n  //setShowModal(false);\n  //setShowTicketFields(false);\n\n  //if (!buyerName || !buyerSurname) {\n  //alert('Please enter both name and surname.');\n  //return;\n  //}\n\n  //try {\n  //const response = fetch('/storeData', {\n  //method: 'POST',\n  //headers: {\n  //'Content-Type': 'application/',\n  //},\n  //body: JSON.stringify({\n  //buyerName: buyerName,\n  //buyerSurname: buyerSurname,\n  //// Add any other data you want to send to the server\n  //}),\n  //});\n\n  //if (response.ok) {\n  //const result = await response.json();\n  //try{\n  //window.location.href = result.paymentGatewayUrl;\n  //}\n  //catch(e)\n  //{\n  //console.error('Error:', e);\n  //}\n  //} else {\n  //alert('Error storing data Please try again.');\n  //}\n  //} catch (error) {\n  //console.error('Error:', error);\n  //alert('An unexpected error occurred. Please try again later.');\n  //}\n\n  //setReservationText('');\n  //setSelectedSpots(1);\n  //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  //setTotalTicketPrice(0);\n  //clearTimeout(purchaseTimeout);\n  //};\n\n  //const handleCloseModal = async () => {\n  //setShowModal(false);\n  //setShowTicketFields(false);\n\n  //const buyerName = document.getElementById('buyerName').value;\n  //const buyerSurname = document.getElementById('buyerSurname').value;\n\n  //if (!buyerName || !buyerSurname) {\n  //alert('Please enter both name and surname.');\n  //return;\n  //}\n\n  //// Store reservation data in localStorage\n  //const reservationData = {\n  //tableNumber: selectedTable,\n  //reservationText: reservationText,\n  //buyerName: buyerName,\n  //buyerSurname: buyerSurname,\n  //ticketTypes: selectedTicketTypes,\n  //totalTicketPrice: totalTicketPrice,\n  //};\n\n  //// Log the reservation data to the console\n  //console.log('Reservation Data:', reservationData);\n\n  //// Show a confirmation message to the user\n  //alert('Transfering to payment Gateway!');\n\n  //localStorage.setItem('reservationData', JSON.stringify(reservationData)); //??????\n\n  //try {\n  //// Redirect to the payment gateway\n  //const response = await fetch('https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID', {\n  //<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>\n\n  //method: 'POST',\n  //headers: {\n  //'Content-Type': 'application/json',\n  //},\n  //body: JSON.stringify({\n  //// Include any necessary data for the purchase\n  //// Example: reservationData\n  //}),\n  //});\n\n  //if (response.ok) {\n  ////const result = await response.json();\n  ////window.location.href = result.paymentGatewayUrl;\n  //alert('Payment successful.');\n  //} else {\n  //alert('Error initiating purchase. Please try again.');\n  //}\n  //} catch (error) {\n  //console.error('Error:', error);\n  //alert('An unexpected error occurred. Please try again later.');\n  //}\n\n  //setReservationText('');\n  //setSelectedSpots(1);\n  //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  //setTotalTicketPrice(0);\n  //clearTimeout(purchaseTimeout);\n  //};\n\n  const handleCloseModal = async () => {\n    setShowModal(false);\n    setShowTicketFields(false);\n    const buyerName = document.getElementById('buyerName').value;\n    const buyerSurname = document.getElementById('buyerSurname').value;\n    if (!buyerName || !buyerSurname) {\n      alert('Please enter both name and surname.');\n      return;\n    }\n\n    // Store reservation data in state\n    const reservationData = {\n      tableNumber: selectedTable,\n      reservationText: reservationText,\n      buyerName: buyerName,\n      buyerSurname: buyerSurname,\n      ticketTypes: selectedTicketTypes,\n      totalTicketPrice: totalTicketPrice\n    };\n\n    // Update purchased items state\n    setPurchasedItems(prevItems => [...prevItems, reservationData]);\n\n    // Use PayPal SDK to handle payment\n    const paypalScript = document.createElement('script');\n    //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=Ae4yN7YaTyetmQIWanu2GQax0IAwJulSm2jze42lK0aDZRckVVUv35BBzWLE7RhMdAzHar2b2XzyiY-8&currency=CAD`;\n    paypalScript.src = `https://www.paypal.com/sdk/js?client-id=AYSpzj2tY_WJ6Pw5WCGRX9AnrSoX2Es12cxXyWVVZkASit6zo4LfqGiYIIQoi1ChsWmcpN7UKl4In1Ig&buyer-country=CA&currency=CAD`;\n    paypalScript.async = true;\n    paypalScript.onload = () => {\n      handlePayPalPayment();\n    };\n    document.body.appendChild(paypalScript);\n    setReservationText('');\n    setSelectedSpots(1);\n    setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    setTotalTicketPrice(0);\n    clearTimeout(purchaseTimeout);\n  };\n  const handleCloseModalTimeOut = async () => {\n    setShowModal(false);\n    setShowTicketFields(false);\n    clearTimeout(purchaseTimeout);\n  };\n  const handlePayPalPayment = () => {\n    // Replace 'YOUR_CLIENT_ID' with your PayPal client ID\n    window.paypal.Buttons({\n      createOrder: function (data, actions) {\n        const formattedTotal = totalTicketPrice.toFixed(2); // Format total price with two decimal places\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: formattedTotal\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(function (details) {\n          // Handle the successful payment here\n          alert('Payment successful! Transaction completed by ' + details.payer.name.given_name);\n        });\n      },\n      onError: function (err) {\n        // Handle errors here\n        console.error('PayPal error:', err);\n        alert('Payment failed. Please try again.');\n      }\n      //style: {\n      //layout: 'vertical',\n      //color: 'gold',\n      //shape: 'rect',\n      //label: 'paypal',\n      //height: 40,\n      //width: 150,\n      //},\n    }).render('#paypal-button-container');\n  };\n  const calculateTableColor = table => {\n    if (table.capacity === 0) {\n      return 'table-full';\n    } else if (table.capacity <= table.reservations.length) {\n      return 'table-semi-empty';\n    } else {\n      return 'table-empty';\n    }\n  };\n  const getAvailableSeats = table => {\n    return table.capacity - table.reservations.length;\n  };\n\n  // ... (previous code)\n\n  useEffect(() => {\n    // Calculate the total ticket price including the fee using the utility function\n    const {\n      totalWithFee,\n      trnsfee,\n      feeAmount,\n      totalfee\n    } = calculateTotalWithFee(selectedTicketTypes, ticketPrices, transfeePercentage, feePercentage);\n\n    // Set the total ticket price\n    setTotalTicketPrice(totalWithFee);\n\n    //setFee(feeAmount);\n\n    //setTransFeePercentage(trnsfee);\n\n    //console.log('feePercentage:', feePercentage);\n\n    const timeoutId = setTimeout(() => {\n      handleCloseModalTimeOut();\n      alert('Purchase session expired. Please try again.');\n      // Reload the app when the timer ends\n      window.location.reload();\n    }, remainingTime * 1000);\n\n    //setPurchaseTimeout(timeoutId);\n\n    // Update the remaining time every second\n    const intervalId = setInterval(() => {\n      setRemainingTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    }, 1000);\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(intervalId);\n    };\n  }, [selectedTicketTypes, handleCloseModal, ticketPrices, remainingTime, feePercentage]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-layout\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"select-table-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"mb-3\",\n            children: \"Select Table:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"primary\",\n              id: \"dropdown-basic\",\n              children: [\"Table \", selectedTable]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: Array.from({\n                length: 30\n              }).map((_, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => setSelectedTable(index + 1),\n                children: [\"Table \", index + 1]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"enter-seats-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"w-25 mb-3 \",\n            children: \"Enter number of seats:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"selectedSpots\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"number\",\n              placeholder: \"Number of seats\",\n              value: selectedSpots,\n              onChange: e => {\n                const newValue = e.target.value !== '' ? Math.max(1, parseInt(e.target.value, 10)) : '';\n                setSelectedSpots(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleAddReservation,\n          className: \"rectangle-button mb-3\",\n          children: \"Add Reservation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tables.map((table, tableIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `circle-button task-item ${calculateTableColor(table)}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"table-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(tableIndex + 1) ? `VIP Table ${tableIndex + 1}` : `Table ${tableIndex + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 444,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"(\", table.capacity, \" seats)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"reservation-info\",\n            children: table.reservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              variant: \"info\",\n              className: \"mr-1\",\n              children: [reservation.name, \" (\", reservation.spots, \" spots)\"]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 13\n          }, this)]\n        }, tableIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-layout mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rectangle-layout mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"paypal-button-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 5\n    }, this), purchasedItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-layout mt-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Purchase Cart:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: purchasedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\"Table \", item.tableNumber, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 15\n          }, this), \" \", item.reservationText, \", \", item.buyerName, \" \", item.buyerSurname, \", Tickets: \", item.ticketTypes.join(', '), \", Total Price: $\", item.totalTicketPrice]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      dialogClassName: \"custom-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Select Tickets - Table \", selectedTable, \" (\", getAvailableSeats(tables[selectedTable - 1]), \" available seats)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: showTicketFields && /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"Note: Tickets are non-refundable.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"Note: All fields must be completed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerSurname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter your email\",\n              onChange: e => {\n                const emailValue = e.target.value.trim();\n                // Validate email using a regular expression\n                const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                if (emailPattern.test(emailValue) || emailValue === '') {\n                  // Valid email or empty string\n                  setBuyerEmail(emailValue);\n                } else {\n                  // Invalid email\n                  // You can display an error message or take other actions\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), [...Array(selectedSpots)].map((_, index) => /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: `ticketType-${index + 1}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: `Ticket Type for Seat ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-2\",\n                children: `Price: $${ticketPrices[selectedTicketTypes[index]]}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 533,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: selectedTicketTypes[index],\n                onChange: e => handleTicketTypeChange(e.target.value, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"select\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 540,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"standard\",\n                  children: \"Standard ($100)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"VIP\",\n                  children: \"VIP ($120)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 542,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"student\",\n                  children: \"Student ($85)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"kids\",\n                  children: \"Kids ($60)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 532,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 551,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Transcation Fee: $\", totalTicketPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Total Ticket Price + Fee: $\", totalTicketPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 552,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 491,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => {\n            resetState();\n            setShowModal(false);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleCloseModal,\n          children: \"Add to CART\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-timer\",\n          children: [\"Time Remaining: \", Math.floor(remainingTime / 60), \":\", (remainingTime % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"kLcryvEGP8WKdH5vk4UtlbATKdE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Button","Badge","Dropdown","Modal","Alert","calculateTotalWithFee","jsxDEV","_jsxDEV","App","_s","tables","setTables","Array","from","length","reservations","capacity","reservationText","setReservationText","selectedTable","setSelectedTable","selectedSpots","setSelectedSpots","showModal","setShowModal","selectedTicketTypes","setSelectedTicketTypes","fill","showTicketFields","setShowTicketFields","totalTicketPrice","setTotalTicketPrice","purchaseTimeout","setPurchaseTimeout","remainingTime","setRemainingTime","fee","setFee","feePercentage","setFeePercentage","transfeePercentage","setTransFeePercentage","buyerEmail","setBuyerEmail","newTotalTicketPrice","setNewTotalTicketPrice","purchasedItems","setPurchasedItems","resetState","ticketPrices","standard","VIP","student","kids","handleTicketTypeChange","type","index","updatedTicketTypes","isVipTable","includes","alert","reduce","total","t","clearTimeout","timeoutId","setTimeout","handleCloseModal","window","location","reload","handleAddReservation","table","isVipTicketAlreadyReserved","some","reservation","ticketTypes","buyerName","document","getElementById","value","buyerSurname","reservationData","tableNumber","prevItems","paypalScript","createElement","src","async","onload","handlePayPalPayment","body","appendChild","handleCloseModalTimeOut","paypal","Buttons","createOrder","data","actions","formattedTotal","toFixed","order","create","purchase_units","amount","onApprove","capture","then","details","payer","name","given_name","onError","err","console","error","render","calculateTableColor","getAvailableSeats","totalWithFee","trnsfee","feeAmount","totalfee","intervalId","setInterval","prevTime","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","id","Menu","map","_","Item","onClick","Group","controlId","Control","placeholder","onChange","e","newValue","target","Math","max","parseInt","tableIndex","pill","spots","item","join","show","onHide","dialogClassName","Header","closeButton","Title","Body","Label","emailValue","trim","emailPattern","test","as","Footer","floor","toString","padStart","_c","$RefreshReg$"],"sources":["/Users/attari.v/Documents/GitHub/Event-Top/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Badge, Dropdown, Modal, Alert } from 'react-bootstrap';\nimport './App.css';\n//import ReactDOM from 'react-dom';\nimport { calculateTotalWithFee } from './utils';\n\nfunction App() {\n  const [tables, setTables] = useState(Array.from({ length: 30 }, () => ({ reservations: [], capacity: 8 })));\n\n\n\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n  const [selectedSpots, setSelectedSpots] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  //const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(1).fill('standard'));\n  const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(selectedSpots).fill('select'));\n  const [showTicketFields, setShowTicketFields] = useState(false);\n  const [totalTicketPrice, setTotalTicketPrice] = useState(0);\n  const [purchaseTimeout, setPurchaseTimeout] = useState(null);\n\n  const [remainingTime, setRemainingTime] = useState(0.5 * 60); // 5 minutes in seconds\n  const [fee, setFee] = useState(0);\n  const [feePercentage, setFeePercentage] = useState(6); // Set your desired fee percentage here\n  const [transfeePercentage, setTransFeePercentage] = useState(2.9); // Set your desired fee percentage here\n\n   // Assuming you have a state variable and its setter function for buyer's email\n  const [buyerEmail, setBuyerEmail] = useState('');  \n\n  // Initialize newTotalTicketPrice state\n  const [newTotalTicketPrice, setNewTotalTicketPrice] = useState(0);\n  const [purchasedItems, setPurchasedItems] = useState([]);\n\n  const resetState = () => {\n    setTables(Array.from({ length: 30 }, () => ({ reservations: [], capacity: 8 })));\n    setReservationText('');\n    setSelectedTable(1);\n    setSelectedSpots(1);\n    setShowModal(false);\n    setSelectedTicketTypes(Array(1).fill('select'));\n    setShowTicketFields(false);\n    setTotalTicketPrice(0);\n    setPurchaseTimeout(null);\n    setRemainingTime(10 * 60);\n    setFee(0);\n    setFeePercentage(6);\n    setTransFeePercentage(2.9);\n    setNewTotalTicketPrice(0);\n  };  \n  \n  const ticketPrices = {\n    standard: 100,\n    VIP: 120,\n    student: 1,\n    kids: 1,\n  };\n\n\n\nconst handleTicketTypeChange = (type, index) => {\n  const updatedTicketTypes = [...selectedTicketTypes];\n  \n  // Check if the selected table is in the specified range\n  const isVipTable = [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable);\n\n  // If the selected table is a VIP table, force the ticket type to be VIP\n  if (isVipTable && type !== 'VIP') {\n    alert('Only VIP tickets are allowed for this table.');\n    updatedTicketTypes[index] = 'VIP';\n  } else {\n    updatedTicketTypes[index] = type;\n  }\n\n  setSelectedTicketTypes(updatedTicketTypes);\n\n  const newTotalTicketPrice = updatedTicketTypes.reduce((total, t) => total + ticketPrices[t], 0);\n  setTotalTicketPrice(newTotalTicketPrice);\n\n  clearTimeout(purchaseTimeout);\n  const timeoutId = setTimeout(() => {\n    handleCloseModal();\n    // Reload the app when the timer ends\n    alert('Purchase session expired. Please try again.');\n    window.location.reload();\n  }, remainingTime * 1000);\n  setPurchaseTimeout(timeoutId);\n};\n\n\n\nconst handleAddReservation = () => {\n  const table = tables[selectedTable - 1];\n\n  if (selectedSpots <= table.capacity && selectedSpots <= 8) {\n    const isVipTicketAlreadyReserved = table.reservations.some(reservation =>\n      reservation.ticketTypes.includes('VIP')\n    );\n\n    if (isVipTicketAlreadyReserved && [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable)) {\n      alert(\"VIP ticket already reserved for this table.\");\n      return;\n    }\n\n    setShowModal(true);\n    setShowTicketFields(true);\n  } else if (selectedSpots > 8) {\n    alert(\"You can't reserve more than 8 spots for a single table.\");\n  } else {\n    alert(`Only ${table.capacity} spots available for this table.`);\n  }\n\n    setShowModal(true);\n    setShowTicketFields(true);\n};\n\n\n  \n  \n  \n\n  //const handleStoreData = async () => {\n    //setShowModal(false);\n    //setShowTicketFields(false);\n    \n    //if (!buyerName || !buyerSurname) {\n      //alert('Please enter both name and surname.');\n      //return;\n    //}\n    \n    //try {\n      //const response = fetch('/storeData', {\n        //method: 'POST',\n        //headers: {\n          //'Content-Type': 'application/',\n        //},\n        //body: JSON.stringify({\n          //buyerName: buyerName,\n          //buyerSurname: buyerSurname,\n          //// Add any other data you want to send to the server\n        //}),\n      //});\n      \n      //if (response.ok) {\n        //const result = await response.json();\n        //try{\n\t\t\t//window.location.href = result.paymentGatewayUrl;\n\t\t//}\n\t\t//catch(e)\n\t\t//{\n\t\t//console.error('Error:', e);\n\t\t//}\n      //} else {\n        //alert('Error storing data Please try again.');\n      //}\n    //} catch (error) {\n      //console.error('Error:', error);\n      //alert('An unexpected error occurred. Please try again later.');\n    //}\n    \n    //setReservationText('');\n    //setSelectedSpots(1);\n    //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    //setTotalTicketPrice(0);\n    //clearTimeout(purchaseTimeout);\n  //};\n\n\n  //const handleCloseModal = async () => {\n    //setShowModal(false);\n    //setShowTicketFields(false);\n\n\t//const buyerName = document.getElementById('buyerName').value;\n\t//const buyerSurname = document.getElementById('buyerSurname').value;\n\n    //if (!buyerName || !buyerSurname) {\n      //alert('Please enter both name and surname.');\n      //return;\n    //}\n\n    //// Store reservation data in localStorage\n    //const reservationData = {\n      //tableNumber: selectedTable,\n      //reservationText: reservationText,\n      //buyerName: buyerName,\n      //buyerSurname: buyerSurname,\n      //ticketTypes: selectedTicketTypes,\n      //totalTicketPrice: totalTicketPrice,\n    //};\n\n    //// Log the reservation data to the console\n    //console.log('Reservation Data:', reservationData);\n\n    //// Show a confirmation message to the user\n    //alert('Transfering to payment Gateway!');\n\n    //localStorage.setItem('reservationData', JSON.stringify(reservationData)); //??????\n\n    //try {\n      //// Redirect to the payment gateway\n      //const response = await fetch('https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID', {\n\t\t  //<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>\n\n        //method: 'POST',\n        //headers: {\n          //'Content-Type': 'application/json',\n        //},\n        //body: JSON.stringify({\n          //// Include any necessary data for the purchase\n          //// Example: reservationData\n        //}),\n      //});\n\n      //if (response.ok) {\n        ////const result = await response.json();\n        ////window.location.href = result.paymentGatewayUrl;\n        //alert('Payment successful.');\n      //} else {\n        //alert('Error initiating purchase. Please try again.');\n      //}\n    //} catch (error) {\n      //console.error('Error:', error);\n      //alert('An unexpected error occurred. Please try again later.');\n    //}\n\n    //setReservationText('');\n    //setSelectedSpots(1);\n    //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    //setTotalTicketPrice(0);\n    //clearTimeout(purchaseTimeout);\n  //};\n  \n  \n  \n\n\nconst handleCloseModal = async () => {\n  setShowModal(false);\n  setShowTicketFields(false);\n\n  const buyerName = document.getElementById('buyerName').value;\n  const buyerSurname = document.getElementById('buyerSurname').value;\n\n  if (!buyerName || !buyerSurname) {\n    alert('Please enter both name and surname.');\n    return;\n  }\n\n    // Store reservation data in state\n    const reservationData = {\n      tableNumber: selectedTable,\n      reservationText: reservationText,\n      buyerName: buyerName,\n      buyerSurname: buyerSurname,\n      ticketTypes: selectedTicketTypes,\n      totalTicketPrice: totalTicketPrice,\n    };\n\n\n    // Update purchased items state\n    setPurchasedItems((prevItems) => [...prevItems, reservationData]);\n\n  // Use PayPal SDK to handle payment\n  const paypalScript = document.createElement('script');\n  //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=Ae4yN7YaTyetmQIWanu2GQax0IAwJulSm2jze42lK0aDZRckVVUv35BBzWLE7RhMdAzHar2b2XzyiY-8&currency=CAD`;\n  paypalScript.src = `https://www.paypal.com/sdk/js?client-id=AYSpzj2tY_WJ6Pw5WCGRX9AnrSoX2Es12cxXyWVVZkASit6zo4LfqGiYIIQoi1ChsWmcpN7UKl4In1Ig&buyer-country=CA&currency=CAD`;\n  paypalScript.async = true;\n  paypalScript.onload = () => {\n    handlePayPalPayment();\n  };\n  document.body.appendChild(paypalScript);\n\n    \n  setReservationText('');\n  setSelectedSpots(1);\n  setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  setTotalTicketPrice(0);\n  clearTimeout(purchaseTimeout);\n};\n\n\nconst handleCloseModalTimeOut = async () => {\n  setShowModal(false);\n  setShowTicketFields(false);\n\n  clearTimeout(purchaseTimeout);\n};\n\n\n\nconst handlePayPalPayment = () => {\n  // Replace 'YOUR_CLIENT_ID' with your PayPal client ID\n  window.paypal\n    .Buttons({\n      createOrder: function (data, actions) {\n        const formattedTotal = totalTicketPrice.toFixed(2); // Format total price with two decimal places\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                value: formattedTotal,\n              },\n            },\n          ],\n        });\n      },\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(function (details) {\n          // Handle the successful payment here\n          alert('Payment successful! Transaction completed by ' + details.payer.name.given_name);\n        });\n      },\n      onError: function (err) {\n        // Handle errors here\n        console.error('PayPal error:', err);\n        alert('Payment failed. Please try again.');\n      }\n      //style: {\n        //layout: 'vertical',\n        //color: 'gold',\n        //shape: 'rect',\n        //label: 'paypal',\n        //height: 40,\n        //width: 150,\n      //},\n    })\n    .render('#paypal-button-container');\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const calculateTableColor = (table) => {\n    if (table.capacity === 0) {\n      return 'table-full';\n    } else if (table.capacity <= table.reservations.length) {\n      return 'table-semi-empty';\n    } else {\n      return 'table-empty';\n    }\n  };\n\n  const getAvailableSeats = (table) => {\n    return table.capacity - table.reservations.length;\n  };\n\n\n// ... (previous code)\n\nuseEffect(() => {\n\n  // Calculate the total ticket price including the fee using the utility function\n  const { totalWithFee, trnsfee, feeAmount, totalfee } = calculateTotalWithFee(selectedTicketTypes, ticketPrices, transfeePercentage, feePercentage);\n\n  // Set the total ticket price\n  setTotalTicketPrice(totalWithFee);\n\n  //setFee(feeAmount);\n\n  //setTransFeePercentage(trnsfee);\n  \n  //console.log('feePercentage:', feePercentage);\n\n  const timeoutId = setTimeout(() => {\n    handleCloseModalTimeOut();\n    alert('Purchase session expired. Please try again.');\n    // Reload the app when the timer ends\n    window.location.reload();\n  }, remainingTime * 1000);\n  \n  //setPurchaseTimeout(timeoutId);\n\n  // Update the remaining time every second\n  const intervalId = setInterval(() => {\n    setRemainingTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\n  }, 1000);\n\n  return () => {\n    clearTimeout(timeoutId);\n    clearInterval(intervalId);\n  };\n}, [selectedTicketTypes, handleCloseModal, ticketPrices, remainingTime, feePercentage]);\n\n\n\nreturn (\n  <Container className=\"mt-3\">\n    {/* Main container for the component */}\n    <div className=\"rectangle-layout\">\n      <Form>\n        {/* Select Table section */}\n        <div className=\"select-table-section\">\n          <h5 className=\"mb-3\">Select Table:</h5>\n          <Dropdown>\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n              Table {selectedTable}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {Array.from({ length: 30 }).map((_, index) => (\n                <Dropdown.Item key={index} onClick={() => setSelectedTable(index + 1)}>\n                  Table {index + 1}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        {/* Enter number of seats section */}\n        <div className=\"enter-seats-section\">\n          <h5 className=\"w-25 mb-3 \">Enter number of seats:</h5>\n          <Form.Group controlId=\"selectedSpots\">\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Number of seats\"\n              value={selectedSpots}\n              onChange={(e) => {\n                const newValue = e.target.value !== '' ? Math.max(1, parseInt(e.target.value, 10)) : '';\n                setSelectedSpots(newValue);\n              }}\n            />\n          </Form.Group>\n        </div>\n        {/* Button to add reservation */}\n        <Button variant=\"primary\" onClick={handleAddReservation} className=\"rectangle-button mb-3\">\n          Add Reservation\n        </Button>\n      </Form>\n      {/* Task list */}\n      {/* Task list */}\n      {/* Task list */}\n      <div className=\"task-list\">\n        {tables.map((table, tableIndex) => (\n          <div key={tableIndex} className={`circle-button task-item ${calculateTableColor(table)}`}>\n            {/* Seat Capacity */}\n            <div className=\"table-info\">\n              <strong>{[1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(tableIndex + 1) ? `VIP Table ${tableIndex + 1}` : `Table ${tableIndex + 1}`}</strong>\n              <span>({table.capacity} seats)</span>\n            </div>\n            {/* Reservations */}\n            <div className=\"reservation-info\">\n              {table.reservations.map((reservation, index) => (\n                <Badge key={index} pill variant=\"info\" className=\"mr-1\">\n                  {reservation.name} ({reservation.spots} spots)\n                </Badge>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n\n    {/* Additional container for PayPal button */}\n    <div className=\"rectangle-layout mt-3\">\n      <div className=\"rectangle-layout mt-3\">\n        <div id=\"paypal-button-container\"></div>\n      </div>\n      {/* Additional content, e.g., other buttons */}\n    </div>\n    \n    {purchasedItems.length > 0 && (\n      <div className=\"rectangle-layout mt-3\">\n        <h5>Purchase Cart:</h5>\n        <ul>\n          {purchasedItems.map((item, index) => (\n            <li key={index}>\n              <strong>Table {item.tableNumber}:</strong> {item.reservationText}, {item.buyerName} {item.buyerSurname}, Tickets: {item.ticketTypes.join(', ')}, Total Price: ${item.totalTicketPrice}\n            </li>\n          ))}\n        </ul>\n      </div>\n    )}\n\n\n\n    {/* Reservation modal */}\n    <Modal show={showModal} onHide={handleCloseModal} dialogClassName=\"custom-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Select Tickets - Table {selectedTable} ({getAvailableSeats(tables[selectedTable - 1])} available seats)\n        </Modal.Title>\n      </Modal.Header>\n      {/* Modal body */}\n      <Modal.Body>\n        {showTicketFields && (\n          <Form>\n            {/* Alert */}\n            <Alert variant=\"warning\">Note: Tickets are non-refundable.</Alert>\n            <Alert variant=\"warning\">Note: All fields must be completed.</Alert>\n            {/* Buyer's name input */}\n            <Form.Group controlId=\"buyerName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter your name\" />\n            </Form.Group>\n            {/* Buyer's surname input */}\n            <Form.Group controlId=\"buyerSurname\">\n              <Form.Label>Surname</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter your surname\" />\n            </Form.Group>\n            {/* Buyer's EMAIL input */}\n            <Form.Group controlId=\"buyerEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={(e) => {\n                  const emailValue = e.target.value.trim();\n                  // Validate email using a regular expression\n                  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                  if (emailPattern.test(emailValue) || emailValue === '') {\n                    // Valid email or empty string\n                    setBuyerEmail(emailValue);\n                  } else {\n                    // Invalid email\n                    // You can display an error message or take other actions\n                  }\n                }}\n              />\n            </Form.Group>\n\n            {/* Ticket type selection for each seat */}\n            {[...Array(selectedSpots)].map((_, index) => (\n              <Form.Group key={index} controlId={`ticketType-${index + 1}`}>\n                <Form.Label>{`Ticket Type for Seat ${index + 1}`}</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <span className=\"mr-2\">{`Price: $${ticketPrices[selectedTicketTypes[index]]}`}</span>\n                  {/* Dropdown for selecting ticket type */}\n                  <Form.Control\n                    as=\"select\"\n                    value={selectedTicketTypes[index]}\n                    onChange={(e) => handleTicketTypeChange(e.target.value, index)}\n                  >\n                    <option value=\"select\">Select</option>\n                    <option value=\"standard\">Standard ($100)</option>\n                    <option value=\"VIP\">VIP ($120)</option>\n                    <option value=\"student\">Student ($85)</option>\n                    <option value=\"kids\">Kids ($60)</option>\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            ))}\n            {/* Notes section */}\n            <div className=\"mt-3\">\n              <strong>Notes:</strong>\n              <ul>\n                <li>Transcation Fee: ${totalTicketPrice}</li>\n                {/* <li>Fee (6%): ${totalTicketPrice}</li> */}\n                <li>Total Ticket Price + Fee: ${totalTicketPrice}</li>\n              </ul>\n            </div>\n          </Form>\n        )}\n        {/* PayPal button container */}\n        {/* <div id=\"paypal-button-container\"></div> */}\n      </Modal.Body>\n      {/* Modal footer */}\n      <Modal.Footer>\n        {/* Close button */}\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => { resetState(); setShowModal(false); }}>\n          Close\n        </button>\n        {/* Purchase button */}\n        <Button variant=\"success\" onClick={handleCloseModal}>\n          Add to CART\n        </Button>\n        {/* Countdown timer */}\n        <div className=\"countdown-timer\">Time Remaining: {Math.floor(remainingTime / 60)}:{(remainingTime % 60).toString().padStart(2, '0')}</div>\n      </Modal.Footer>\n    </Modal>\n\n\n  </Container>\n);\n\n\n\n\n\n\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,IAAI,EAAEC,MAAM,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,QAAQ,iBAAiB;AACxF,OAAO,WAAW;AAClB;AACA,SAASC,qBAAqB,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAACgB,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,OAAO;IAAEC,YAAY,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,CAAC,CAAC,CAAC;EAI3G,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACuB,aAAa,EAAEC,gBAAgB,CAAC,GAAGxB,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAACyB,aAAa,EAAEC,gBAAgB,CAAC,GAAG1B,QAAQ,CAAC,CAAC,CAAC;EACrD,MAAM,CAAC2B,SAAS,EAAEC,YAAY,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,MAAM,CAAC6B,mBAAmB,EAAEC,sBAAsB,CAAC,GAAG9B,QAAQ,CAACgB,KAAK,CAACS,aAAa,CAAC,CAACM,IAAI,CAAC,QAAQ,CAAC,CAAC;EACnG,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGjC,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACkC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACoC,eAAe,EAAEC,kBAAkB,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM,CAACsC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvC,QAAQ,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACwC,GAAG,EAAEC,MAAM,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAAC0C,aAAa,EAAEC,gBAAgB,CAAC,GAAG3C,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvD,MAAM,CAAC4C,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG7C,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAElE;EACD,MAAM,CAAC8C,UAAU,EAAEC,aAAa,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM,CAACgD,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGjD,QAAQ,CAAC,CAAC,CAAC;EACjE,MAAM,CAACkD,cAAc,EAAEC,iBAAiB,CAAC,GAAGnD,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMoD,UAAU,GAAGA,CAAA,KAAM;IACvBrC,SAAS,CAACC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAG,CAAC,EAAE,OAAO;MAAEC,YAAY,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAC,CAAC,CAAC,CAAC;IAChFE,kBAAkB,CAAC,EAAE,CAAC;IACtBE,gBAAgB,CAAC,CAAC,CAAC;IACnBE,gBAAgB,CAAC,CAAC,CAAC;IACnBE,YAAY,CAAC,KAAK,CAAC;IACnBE,sBAAsB,CAACd,KAAK,CAAC,CAAC,CAAC,CAACe,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC/CE,mBAAmB,CAAC,KAAK,CAAC;IAC1BE,mBAAmB,CAAC,CAAC,CAAC;IACtBE,kBAAkB,CAAC,IAAI,CAAC;IACxBE,gBAAgB,CAAC,EAAE,GAAG,EAAE,CAAC;IACzBE,MAAM,CAAC,CAAC,CAAC;IACTE,gBAAgB,CAAC,CAAC,CAAC;IACnBE,qBAAqB,CAAC,GAAG,CAAC;IAC1BI,sBAAsB,CAAC,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMI,YAAY,GAAG;IACnBC,QAAQ,EAAE,GAAG;IACbC,GAAG,EAAE,GAAG;IACRC,OAAO,EAAE,CAAC;IACVC,IAAI,EAAE;EACR,CAAC;EAIH,MAAMC,sBAAsB,GAAGA,CAACC,IAAI,EAAEC,KAAK,KAAK;IAC9C,MAAMC,kBAAkB,GAAG,CAAC,GAAGhC,mBAAmB,CAAC;;IAEnD;IACA,MAAMiC,UAAU,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAACC,QAAQ,CAACxC,aAAa,CAAC;;IAE9E;IACA,IAAIuC,UAAU,IAAIH,IAAI,KAAK,KAAK,EAAE;MAChCK,KAAK,CAAC,8CAA8C,CAAC;MACrDH,kBAAkB,CAACD,KAAK,CAAC,GAAG,KAAK;IACnC,CAAC,MAAM;MACLC,kBAAkB,CAACD,KAAK,CAAC,GAAGD,IAAI;IAClC;IAEA7B,sBAAsB,CAAC+B,kBAAkB,CAAC;IAE1C,MAAMb,mBAAmB,GAAGa,kBAAkB,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,CAAC,KAAKD,KAAK,GAAGb,YAAY,CAACc,CAAC,CAAC,EAAE,CAAC,CAAC;IAC/FhC,mBAAmB,CAACa,mBAAmB,CAAC;IAExCoB,YAAY,CAAChC,eAAe,CAAC;IAC7B,MAAMiC,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjCC,gBAAgB,CAAC,CAAC;MAClB;MACAP,KAAK,CAAC,6CAA6C,CAAC;MACpDQ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,EAAEpC,aAAa,GAAG,IAAI,CAAC;IACxBD,kBAAkB,CAACgC,SAAS,CAAC;EAC/B,CAAC;EAID,MAAMM,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,KAAK,GAAG9D,MAAM,CAACS,aAAa,GAAG,CAAC,CAAC;IAEvC,IAAIE,aAAa,IAAImD,KAAK,CAACxD,QAAQ,IAAIK,aAAa,IAAI,CAAC,EAAE;MACzD,MAAMoD,0BAA0B,GAAGD,KAAK,CAACzD,YAAY,CAAC2D,IAAI,CAACC,WAAW,IACpEA,WAAW,CAACC,WAAW,CAACjB,QAAQ,CAAC,KAAK,CACxC,CAAC;MAED,IAAIc,0BAA0B,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAACd,QAAQ,CAACxC,aAAa,CAAC,EAAE;QAC7FyC,KAAK,CAAC,6CAA6C,CAAC;QACpD;MACF;MAEApC,YAAY,CAAC,IAAI,CAAC;MAClBK,mBAAmB,CAAC,IAAI,CAAC;IAC3B,CAAC,MAAM,IAAIR,aAAa,GAAG,CAAC,EAAE;MAC5BuC,KAAK,CAAC,yDAAyD,CAAC;IAClE,CAAC,MAAM;MACLA,KAAK,CAAE,QAAOY,KAAK,CAACxD,QAAS,kCAAiC,CAAC;IACjE;IAEEQ,YAAY,CAAC,IAAI,CAAC;IAClBK,mBAAmB,CAAC,IAAI,CAAC;EAC7B,CAAC;;EAOC;EACE;EACA;;EAEA;EACE;EACA;EACF;;EAEA;EACE;EACE;EACA;EACE;EACF;EACA;EACE;EACA;EACA;EACF;EACF;;EAEA;EACE;EACA;EACL;EACD;EACA;EACA;EACA;EACA;EACI;EACE;EACF;EACF;EACE;EACA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACF;;EAGA;EACE;EACA;;EAEH;EACA;;EAEG;EACE;EACA;EACF;;EAEA;EACA;EACE;EACA;EACA;EACA;EACA;EACA;EACF;;EAEA;EACA;;EAEA;EACA;;EAEA;;EAEA;EACE;EACA;EACF;;EAEI;EACA;EACE;EACF;EACA;EACE;EACA;EACF;EACF;;EAEA;EACE;EACA;EACA;EACF;EACE;EACF;EACF;EACE;EACA;EACF;;EAEA;EACA;EACA;EACA;EACA;EACF;;EAMF,MAAMsC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC3C,YAAY,CAAC,KAAK,CAAC;IACnBK,mBAAmB,CAAC,KAAK,CAAC;IAE1B,MAAMgD,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;IAC5D,MAAMC,YAAY,GAAGH,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,KAAK;IAElE,IAAI,CAACH,SAAS,IAAI,CAACI,YAAY,EAAE;MAC/BrB,KAAK,CAAC,qCAAqC,CAAC;MAC5C;IACF;;IAEE;IACA,MAAMsB,eAAe,GAAG;MACtBC,WAAW,EAAEhE,aAAa;MAC1BF,eAAe,EAAEA,eAAe;MAChC4D,SAAS,EAAEA,SAAS;MACpBI,YAAY,EAAEA,YAAY;MAC1BL,WAAW,EAAEnD,mBAAmB;MAChCK,gBAAgB,EAAEA;IACpB,CAAC;;IAGD;IACAiB,iBAAiB,CAAEqC,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEF,eAAe,CAAC,CAAC;;IAEnE;IACA,MAAMG,YAAY,GAAGP,QAAQ,CAACQ,aAAa,CAAC,QAAQ,CAAC;IACrD;IACAD,YAAY,CAACE,GAAG,GAAI,wJAAuJ;IAC3KF,YAAY,CAACG,KAAK,GAAG,IAAI;IACzBH,YAAY,CAACI,MAAM,GAAG,MAAM;MAC1BC,mBAAmB,CAAC,CAAC;IACvB,CAAC;IACDZ,QAAQ,CAACa,IAAI,CAACC,WAAW,CAACP,YAAY,CAAC;IAGvCnE,kBAAkB,CAAC,EAAE,CAAC;IACtBI,gBAAgB,CAAC,CAAC,CAAC;IACnBI,sBAAsB,CAACd,KAAK,CAACS,aAAa,CAAC,CAACM,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7DI,mBAAmB,CAAC,CAAC,CAAC;IACtBiC,YAAY,CAAChC,eAAe,CAAC;EAC/B,CAAC;EAGD,MAAM6D,uBAAuB,GAAG,MAAAA,CAAA,KAAY;IAC1CrE,YAAY,CAAC,KAAK,CAAC;IACnBK,mBAAmB,CAAC,KAAK,CAAC;IAE1BmC,YAAY,CAAChC,eAAe,CAAC;EAC/B,CAAC;EAID,MAAM0D,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAtB,MAAM,CAAC0B,MAAM,CACVC,OAAO,CAAC;MACPC,WAAW,EAAE,SAAAA,CAAUC,IAAI,EAAEC,OAAO,EAAE;QACpC,MAAMC,cAAc,GAAGrE,gBAAgB,CAACsE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,OAAOF,OAAO,CAACG,KAAK,CAACC,MAAM,CAAC;UAC1BC,cAAc,EAAE,CACd;YACEC,MAAM,EAAE;cACNxB,KAAK,EAAEmB;YACT;UACF,CAAC;QAEL,CAAC,CAAC;MACJ,CAAC;MACDM,SAAS,EAAE,SAAAA,CAAUR,IAAI,EAAEC,OAAO,EAAE;QAClC,OAAOA,OAAO,CAACG,KAAK,CAACK,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC,UAAUC,OAAO,EAAE;UACrD;UACAhD,KAAK,CAAC,+CAA+C,GAAGgD,OAAO,CAACC,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC;QACxF,CAAC,CAAC;MACJ,CAAC;MACDC,OAAO,EAAE,SAAAA,CAAUC,GAAG,EAAE;QACtB;QACAC,OAAO,CAACC,KAAK,CAAC,eAAe,EAAEF,GAAG,CAAC;QACnCrD,KAAK,CAAC,mCAAmC,CAAC;MAC5C;MACA;MACE;MACA;MACA;MACA;MACA;MACA;MACF;IACF,CAAC,CAAC,CACDwD,MAAM,CAAC,0BAA0B,CAAC;EACvC,CAAC;EAcC,MAAMC,mBAAmB,GAAI7C,KAAK,IAAK;IACrC,IAAIA,KAAK,CAACxD,QAAQ,KAAK,CAAC,EAAE;MACxB,OAAO,YAAY;IACrB,CAAC,MAAM,IAAIwD,KAAK,CAACxD,QAAQ,IAAIwD,KAAK,CAACzD,YAAY,CAACD,MAAM,EAAE;MACtD,OAAO,kBAAkB;IAC3B,CAAC,MAAM;MACL,OAAO,aAAa;IACtB;EACF,CAAC;EAED,MAAMwG,iBAAiB,GAAI9C,KAAK,IAAK;IACnC,OAAOA,KAAK,CAACxD,QAAQ,GAAGwD,KAAK,CAACzD,YAAY,CAACD,MAAM;EACnD,CAAC;;EAGH;;EAEAjB,SAAS,CAAC,MAAM;IAEd;IACA,MAAM;MAAE0H,YAAY;MAAEC,OAAO;MAAEC,SAAS;MAAEC;IAAS,CAAC,GAAGrH,qBAAqB,CAACoB,mBAAmB,EAAEwB,YAAY,EAAET,kBAAkB,EAAEF,aAAa,CAAC;;IAElJ;IACAP,mBAAmB,CAACwF,YAAY,CAAC;;IAEjC;;IAEA;;IAEA;;IAEA,MAAMtD,SAAS,GAAGC,UAAU,CAAC,MAAM;MACjC2B,uBAAuB,CAAC,CAAC;MACzBjC,KAAK,CAAC,6CAA6C,CAAC;MACpD;MACAQ,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,EAAEpC,aAAa,GAAG,IAAI,CAAC;;IAExB;;IAEA;IACA,MAAMyF,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnCzF,gBAAgB,CAAE0F,QAAQ,IAAMA,QAAQ,GAAG,CAAC,GAAGA,QAAQ,GAAG,CAAC,GAAG,CAAE,CAAC;IACnE,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACX7D,YAAY,CAACC,SAAS,CAAC;MACvB6D,aAAa,CAACH,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAAClG,mBAAmB,EAAE0C,gBAAgB,EAAElB,YAAY,EAAEf,aAAa,EAAEI,aAAa,CAAC,CAAC;EAIvF,oBACE/B,OAAA,CAACT,SAAS;IAACiI,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAEzBzH,OAAA;MAAKwH,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BzH,OAAA,CAACR,IAAI;QAAAiI,QAAA,gBAEHzH,OAAA;UAAKwH,SAAS,EAAC,sBAAsB;UAAAC,QAAA,gBACnCzH,OAAA;YAAIwH,SAAS,EAAC,MAAM;YAAAC,QAAA,EAAC;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvC7H,OAAA,CAACL,QAAQ;YAAA8H,QAAA,gBACPzH,OAAA,CAACL,QAAQ,CAACmI,MAAM;cAACC,OAAO,EAAC,SAAS;cAACC,EAAE,EAAC,gBAAgB;cAAAP,QAAA,GAAC,QAC/C,EAAC7G,aAAa;YAAA;cAAA8G,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eAClB7H,OAAA,CAACL,QAAQ,CAACsI,IAAI;cAAAR,QAAA,EACXpH,KAAK,CAACC,IAAI,CAAC;gBAAEC,MAAM,EAAE;cAAG,CAAC,CAAC,CAAC2H,GAAG,CAAC,CAACC,CAAC,EAAElF,KAAK,kBACvCjD,OAAA,CAACL,QAAQ,CAACyI,IAAI;gBAAaC,OAAO,EAAEA,CAAA,KAAMxH,gBAAgB,CAACoC,KAAK,GAAG,CAAC,CAAE;gBAAAwE,QAAA,GAAC,QAC/D,EAACxE,KAAK,GAAG,CAAC;cAAA,GADEA,KAAK;gBAAAyE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEV,CAChB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACW,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACR,CAAC,eAEN7H,OAAA;UAAKwH,SAAS,EAAC,qBAAqB;UAAAC,QAAA,gBAClCzH,OAAA;YAAIwH,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAsB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtD7H,OAAA,CAACR,IAAI,CAAC8I,KAAK;YAACC,SAAS,EAAC,eAAe;YAAAd,QAAA,eACnCzH,OAAA,CAACR,IAAI,CAACgJ,OAAO;cACXxF,IAAI,EAAC,QAAQ;cACbyF,WAAW,EAAC,iBAAiB;cAC7BhE,KAAK,EAAE3D,aAAc;cACrB4H,QAAQ,EAAGC,CAAC,IAAK;gBACf,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACpE,KAAK,KAAK,EAAE,GAAGqE,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEC,QAAQ,CAACL,CAAC,CAACE,MAAM,CAACpE,KAAK,EAAE,EAAE,CAAC,CAAC,GAAG,EAAE;gBACvF1D,gBAAgB,CAAC6H,QAAQ,CAAC;cAC5B;YAAE;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,eAEN7H,OAAA,CAACP,MAAM;UAACsI,OAAO,EAAC,SAAS;UAACM,OAAO,EAAErE,oBAAqB;UAACwD,SAAS,EAAC,uBAAuB;UAAAC,QAAA,EAAC;QAE3F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAIP7H,OAAA;QAAKwH,SAAS,EAAC,WAAW;QAAAC,QAAA,EACvBtH,MAAM,CAAC+H,GAAG,CAAC,CAACjE,KAAK,EAAEgF,UAAU,kBAC5BjJ,OAAA;UAAsBwH,SAAS,EAAG,2BAA0BV,mBAAmB,CAAC7C,KAAK,CAAE,EAAE;UAAAwD,QAAA,gBAEvFzH,OAAA;YAAKwH,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACzBzH,OAAA;cAAAyH,QAAA,EAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAACrE,QAAQ,CAAC6F,UAAU,GAAG,CAAC,CAAC,GAAI,aAAYA,UAAU,GAAG,CAAE,EAAC,GAAI,SAAQA,UAAU,GAAG,CAAE;YAAC;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,eAC3I7H,OAAA;cAAAyH,QAAA,GAAM,GAAC,EAACxD,KAAK,CAACxD,QAAQ,EAAC,SAAO;YAAA;cAAAiH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClC,CAAC,eAEN7H,OAAA;YAAKwH,SAAS,EAAC,kBAAkB;YAAAC,QAAA,EAC9BxD,KAAK,CAACzD,YAAY,CAAC0H,GAAG,CAAC,CAAC9D,WAAW,EAAEnB,KAAK,kBACzCjD,OAAA,CAACN,KAAK;cAAawJ,IAAI;cAACnB,OAAO,EAAC,MAAM;cAACP,SAAS,EAAC,MAAM;cAAAC,QAAA,GACpDrD,WAAW,CAACmC,IAAI,EAAC,IAAE,EAACnC,WAAW,CAAC+E,KAAK,EAAC,SACzC;YAAA,GAFYlG,KAAK;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACR;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAbEoB,UAAU;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcf,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN7H,OAAA;MAAKwH,SAAS,EAAC,uBAAuB;MAAAC,QAAA,eACpCzH,OAAA;QAAKwH,SAAS,EAAC,uBAAuB;QAAAC,QAAA,eACpCzH,OAAA;UAAKgI,EAAE,EAAC;QAAyB;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,EAELtF,cAAc,CAAChC,MAAM,GAAG,CAAC,iBACxBP,OAAA;MAAKwH,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCzH,OAAA;QAAAyH,QAAA,EAAI;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACvB7H,OAAA;QAAAyH,QAAA,EACGlF,cAAc,CAAC2F,GAAG,CAAC,CAACkB,IAAI,EAAEnG,KAAK,kBAC9BjD,OAAA;UAAAyH,QAAA,gBACEzH,OAAA;YAAAyH,QAAA,GAAQ,QAAM,EAAC2B,IAAI,CAACxE,WAAW,EAAC,GAAC;UAAA;YAAA8C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACuB,IAAI,CAAC1I,eAAe,EAAC,IAAE,EAAC0I,IAAI,CAAC9E,SAAS,EAAC,GAAC,EAAC8E,IAAI,CAAC1E,YAAY,EAAC,aAAW,EAAC0E,IAAI,CAAC/E,WAAW,CAACgF,IAAI,CAAC,IAAI,CAAC,EAAC,kBAAgB,EAACD,IAAI,CAAC7H,gBAAgB;QAAA,GAD9K0B,KAAK;UAAAyE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACN,eAKD7H,OAAA,CAACJ,KAAK;MAAC0J,IAAI,EAAEtI,SAAU;MAACuI,MAAM,EAAE3F,gBAAiB;MAAC4F,eAAe,EAAC,cAAc;MAAA/B,QAAA,gBAC9EzH,OAAA,CAACJ,KAAK,CAAC6J,MAAM;QAACC,WAAW;QAAAjC,QAAA,eACvBzH,OAAA,CAACJ,KAAK,CAAC+J,KAAK;UAAAlC,QAAA,GAAC,yBACY,EAAC7G,aAAa,EAAC,IAAE,EAACmG,iBAAiB,CAAC5G,MAAM,CAACS,aAAa,GAAG,CAAC,CAAC,CAAC,EAAC,mBACxF;QAAA;UAAA8G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAEf7H,OAAA,CAACJ,KAAK,CAACgK,IAAI;QAAAnC,QAAA,EACRpG,gBAAgB,iBACfrB,OAAA,CAACR,IAAI;UAAAiI,QAAA,gBAEHzH,OAAA,CAACH,KAAK;YAACkI,OAAO,EAAC,SAAS;YAAAN,QAAA,EAAC;UAAiC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClE7H,OAAA,CAACH,KAAK;YAACkI,OAAO,EAAC,SAAS;YAAAN,QAAA,EAAC;UAAmC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAEpE7H,OAAA,CAACR,IAAI,CAAC8I,KAAK;YAACC,SAAS,EAAC,WAAW;YAAAd,QAAA,gBAC/BzH,OAAA,CAACR,IAAI,CAACqK,KAAK;cAAApC,QAAA,EAAC;YAAI;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC7B7H,OAAA,CAACR,IAAI,CAACgJ,OAAO;cAACxF,IAAI,EAAC,MAAM;cAACyF,WAAW,EAAC;YAAiB;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChD,CAAC,eAEb7H,OAAA,CAACR,IAAI,CAAC8I,KAAK;YAACC,SAAS,EAAC,cAAc;YAAAd,QAAA,gBAClCzH,OAAA,CAACR,IAAI,CAACqK,KAAK;cAAApC,QAAA,EAAC;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAChC7H,OAAA,CAACR,IAAI,CAACgJ,OAAO;cAACxF,IAAI,EAAC,MAAM;cAACyF,WAAW,EAAC;YAAoB;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC,eAEb7H,OAAA,CAACR,IAAI,CAAC8I,KAAK;YAACC,SAAS,EAAC,YAAY;YAAAd,QAAA,gBAChCzH,OAAA,CAACR,IAAI,CAACqK,KAAK;cAAApC,QAAA,EAAC;YAAK;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC9B7H,OAAA,CAACR,IAAI,CAACgJ,OAAO;cACXxF,IAAI,EAAC,OAAO;cACZyF,WAAW,EAAC,kBAAkB;cAC9BC,QAAQ,EAAGC,CAAC,IAAK;gBACf,MAAMmB,UAAU,GAAGnB,CAAC,CAACE,MAAM,CAACpE,KAAK,CAACsF,IAAI,CAAC,CAAC;gBACxC;gBACA,MAAMC,YAAY,GAAG,4BAA4B;gBACjD,IAAIA,YAAY,CAACC,IAAI,CAACH,UAAU,CAAC,IAAIA,UAAU,KAAK,EAAE,EAAE;kBACtD;kBACA1H,aAAa,CAAC0H,UAAU,CAAC;gBAC3B,CAAC,MAAM;kBACL;kBACA;gBAAA;cAEJ;YAAE;cAAApC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACQ,CAAC,EAGZ,CAAC,GAAGxH,KAAK,CAACS,aAAa,CAAC,CAAC,CAACoH,GAAG,CAAC,CAACC,CAAC,EAAElF,KAAK,kBACtCjD,OAAA,CAACR,IAAI,CAAC8I,KAAK;YAAaC,SAAS,EAAG,cAAatF,KAAK,GAAG,CAAE,EAAE;YAAAwE,QAAA,gBAC3DzH,OAAA,CAACR,IAAI,CAACqK,KAAK;cAAApC,QAAA,EAAG,wBAAuBxE,KAAK,GAAG,CAAE;YAAC;cAAAyE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAa,CAAC,eAC9D7H,OAAA;cAAKwH,SAAS,EAAC,2BAA2B;cAAAC,QAAA,gBACxCzH,OAAA;gBAAMwH,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAG,WAAU/E,YAAY,CAACxB,mBAAmB,CAAC+B,KAAK,CAAC,CAAE;cAAC;gBAAAyE,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAErF7H,OAAA,CAACR,IAAI,CAACgJ,OAAO;gBACX0B,EAAE,EAAC,QAAQ;gBACXzF,KAAK,EAAEvD,mBAAmB,CAAC+B,KAAK,CAAE;gBAClCyF,QAAQ,EAAGC,CAAC,IAAK5F,sBAAsB,CAAC4F,CAAC,CAACE,MAAM,CAACpE,KAAK,EAAExB,KAAK,CAAE;gBAAAwE,QAAA,gBAE/DzH,OAAA;kBAAQyE,KAAK,EAAC,QAAQ;kBAAAgD,QAAA,EAAC;gBAAM;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACtC7H,OAAA;kBAAQyE,KAAK,EAAC,UAAU;kBAAAgD,QAAA,EAAC;gBAAe;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACjD7H,OAAA;kBAAQyE,KAAK,EAAC,KAAK;kBAAAgD,QAAA,EAAC;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eACvC7H,OAAA;kBAAQyE,KAAK,EAAC,SAAS;kBAAAgD,QAAA,EAAC;gBAAa;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC,eAC9C7H,OAAA;kBAAQyE,KAAK,EAAC,MAAM;kBAAAgD,QAAA,EAAC;gBAAU;kBAAAC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5B,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC;UAAA,GAhBS5E,KAAK;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAiBV,CACb,CAAC,eAEF7H,OAAA;YAAKwH,SAAS,EAAC,MAAM;YAAAC,QAAA,gBACnBzH,OAAA;cAAAyH,QAAA,EAAQ;YAAM;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACvB7H,OAAA;cAAAyH,QAAA,gBACEzH,OAAA;gBAAAyH,QAAA,GAAI,oBAAkB,EAAClG,gBAAgB;cAAA;gBAAAmG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eAE7C7H,OAAA;gBAAAyH,QAAA,GAAI,6BAA2B,EAAClG,gBAAgB;cAAA;gBAAAmG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGS,CAAC,eAEb7H,OAAA,CAACJ,KAAK,CAACuK,MAAM;QAAA1C,QAAA,gBAEXzH,OAAA;UAAQgD,IAAI,EAAC,QAAQ;UAACwE,SAAS,EAAC,mBAAmB;UAACa,OAAO,EAAEA,CAAA,KAAM;YAAE5F,UAAU,CAAC,CAAC;YAAExB,YAAY,CAAC,KAAK,CAAC;UAAE,CAAE;UAAAwG,QAAA,EAAC;QAE3G;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET7H,OAAA,CAACP,MAAM;UAACsI,OAAO,EAAC,SAAS;UAACM,OAAO,EAAEzE,gBAAiB;UAAA6D,QAAA,EAAC;QAErD;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAET7H,OAAA;UAAKwH,SAAS,EAAC,iBAAiB;UAAAC,QAAA,GAAC,kBAAgB,EAACqB,IAAI,CAACsB,KAAK,CAACzI,aAAa,GAAG,EAAE,CAAC,EAAC,GAAC,EAAC,CAACA,aAAa,GAAG,EAAE,EAAE0I,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;QAAA;UAAA5C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9H,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGC,CAAC;AAQd;AAAC3H,EAAA,CAnkBQD,GAAG;AAAAsK,EAAA,GAAHtK,GAAG;AAqkBZ,eAAeA,GAAG;AAAC,IAAAsK,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}