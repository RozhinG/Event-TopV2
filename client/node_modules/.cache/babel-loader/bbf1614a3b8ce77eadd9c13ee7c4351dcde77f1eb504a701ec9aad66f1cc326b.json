{"ast":null,"code":"var _jsxFileName = \"/Users/attari.v/Documents/PROJECTS/Ticket_website/website/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Container, Form, Button, Badge, Dropdown } from 'react-bootstrap';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tables, setTables] = useState(Array.from({\n    length: 30\n  }, () => [])); // 30 tables with initial empty reservation arrays\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n  const handleAddReservation = () => {\n    if (tables[selectedTable - 1].length < 8) {\n      setTables(prevTables => {\n        const newTables = [...prevTables];\n        newTables[selectedTable - 1] = [...newTables[selectedTable - 1], reservationText];\n        return newTables;\n      });\n      setReservationText('');\n    } else {\n      alert('No more reservations allowed for this table.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rectangle-layout\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"reservationText\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter a reservation\",\n            value: reservationText,\n            onChange: e => setReservationText(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n            variant: \"primary\",\n            id: \"dropdown-basic\",\n            children: [\"Select Table: \", selectedTable]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n            children: Array.from({\n              length: 30\n            }).map((_, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n              onClick: () => setSelectedTable(index + 1),\n              children: [\"Table \", index + 1]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: handleAddReservation,\n          className: \"circle-button\",\n          children: \"Add Reservation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-list\",\n        children: tables.map((reservations, tableIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle-button task-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Table \", tableIndex + 1]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: reservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(Badge, {\n              pill: true,\n              variant: \"info\",\n              className: \"mr-1\",\n              children: reservation\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, tableIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jpHTUBLkivEMUceJ2z9ML8c2HR0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Container","Form","Button","Badge","Dropdown","jsxDEV","_jsxDEV","App","_s","tables","setTables","Array","from","length","reservationText","setReservationText","selectedTable","setSelectedTable","handleAddReservation","prevTables","newTables","alert","className","children","Group","controlId","Control","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","id","Menu","map","_","index","Item","onClick","reservations","tableIndex","reservation","pill","_c","$RefreshReg$"],"sources":["/Users/attari.v/Documents/PROJECTS/Ticket_website/website/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Form, Button, Badge, Dropdown } from 'react-bootstrap';\nimport './App.css';\n\nfunction App() {\n  const [tables, setTables] = useState(Array.from({ length: 30 }, () => [])); // 30 tables with initial empty reservation arrays\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n\n  const handleAddReservation = () => {\n    if (tables[selectedTable - 1].length < 8) {\n      setTables((prevTables) => {\n        const newTables = [...prevTables];\n        newTables[selectedTable - 1] = [...newTables[selectedTable - 1], reservationText];\n        return newTables;\n      });\n      setReservationText('');\n    } else {\n      alert('No more reservations allowed for this table.');\n    }\n  };\n\n  return (\n    <Container className=\"mt-3\">\n      <div className=\"rectangle-layout\">\n        <Form>\n          <Form.Group controlId=\"reservationText\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Enter a reservation\"\n              value={reservationText}\n              onChange={(e) => setReservationText(e.target.value)}\n            />\n          </Form.Group>\n          <Dropdown className=\"mb-3\">\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n              Select Table: {selectedTable}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {Array.from({ length: 30 }).map((_, index) => (\n                <Dropdown.Item key={index} onClick={() => setSelectedTable(index + 1)}>\n                  Table {index + 1}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Button variant=\"primary\" onClick={handleAddReservation} className=\"circle-button\">\n            Add Reservation\n          </Button>\n        </Form>\n        <div className=\"task-list\">\n          {tables.map((reservations, tableIndex) => (\n            <div key={tableIndex} className=\"circle-button task-item\">\n              <div>\n                <strong>Table {tableIndex + 1}</strong>\n              </div>\n              <div>\n                {reservations.map((reservation, index) => (\n                  <Badge key={index} pill variant=\"info\" className=\"mr-1\">\n                    {reservation}\n                  </Badge>\n                ))}\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}