{"ast":null,"code":"var _jsxFileName = \"/Users/attari.v/Documents/GitHub/Event-Top/client/src/App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Badge, Dropdown, Modal, Alert } from 'react-bootstrap';\nimport './App.css';\nimport PayPalButton from './PayPalButton';\nimport PurchaseCart from './PurchaseCart';\n\n//import ReactDOM from 'react-dom';\nimport { calculateTotalWithFee } from './utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tables, setTables] = useState(Array.from({\n    length: 30\n  }, () => ({\n    reservations: [],\n    capacity: 8\n  })));\n\n  //const [tables, setTables] = useState([]);\n\n  //useEffect(() => {\n  //// Load table data from the JSON file\n  //const loadTableData = async () => {\n  //try {\n  //const response = await fetch('tablesData.json'); // Update with the correct path\n  //const data = await response.json();\n  //setTables(data);\n  //} catch (error) {\n  //console.error('Error loading table data:', error);\n  //}\n  //};\n\n  //loadTableData();\n  //}, []); // Run this effect only once on component mount\n\n  const [capturedDetails, setCapturedDetails] = useState(null);\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n  const [selectedSpots, setSelectedSpots] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  //const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(1).fill('standard'));\n  const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(selectedSpots).fill('select'));\n  const [showTicketFields, setShowTicketFields] = useState(false);\n  const [totalTicketPrice, setTotalTicketPrice] = useState(0);\n  const [purchaseTimeout, setPurchaseTimeout] = useState(null);\n  const [remainingTime, setRemainingTime] = useState(10 * 60); // 5 minutes in seconds\n  const [fee, setFee] = useState(0);\n  const [feePercentage, setFeePercentage] = useState(6); // Set your desired fee percentage here\n  const [transfeePercentage, setTransFeePercentage] = useState(2.9); // Set your desired fee percentage here\n\n  // Assuming you have a state variable and its setter function for buyer's email\n  const [buyerEmail, setBuyerEmail] = useState('');\n\n  // Initialize newTotalTicketPrice state\n  const [newTotalTicketPrice, setNewTotalTicketPrice] = useState(0);\n  const [purchasedItems, setPurchasedItems] = useState([]);\n  const resetState = () => {\n    setTables(Array.from({\n      length: 30\n    }, () => ({\n      reservations: [],\n      capacity: 8\n    })));\n    setReservationText('');\n    setSelectedTable(1);\n    setSelectedSpots(1);\n    setShowModal(false);\n    setSelectedTicketTypes(Array(1).fill('select'));\n    setShowTicketFields(false);\n    setTotalTicketPrice(0);\n    setPurchaseTimeout(null);\n    setRemainingTime(10 * 60);\n    setFee(0);\n    setFeePercentage(6);\n    setTransFeePercentage(2.9);\n    setNewTotalTicketPrice(0);\n  };\n  const ticketPrices = {\n    standard: 100,\n    VIP: 120,\n    student: 1,\n    kids: 1\n  };\n  const handleCaptureDetails = details => {\n    // Handle the captured details as needed\n    console.log('Captured PayPal Details:', details);\n    setCapturedDetails(details);\n\n    // You can perform additional actions here, such as updating state or making API calls\n  };\n  const handleTicketTypeChange = (type, index) => {\n    const updatedTicketTypes = [...selectedTicketTypes];\n\n    // Check if the selected table is in the specified range\n    const isVipTable = [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable);\n\n    // If the selected table is a VIP table, force the ticket type to be VIP\n    if (isVipTable && type !== 'VIP') {\n      alert('Only VIP tickets are allowed for this table.');\n      updatedTicketTypes[index] = 'VIP';\n    } else {\n      updatedTicketTypes[index] = type;\n    }\n    setSelectedTicketTypes(updatedTicketTypes);\n    const newTotalTicketPrice = updatedTicketTypes.reduce((total, t) => total + ticketPrices[t], 0);\n    setTotalTicketPrice(newTotalTicketPrice);\n    clearTimeout(purchaseTimeout);\n    const timeoutId = setTimeout(() => {\n      handleCloseModal();\n      // Reload the app when the timer ends\n      alert('Purchase session expired. Please try again.');\n      window.location.reload();\n    }, remainingTime * 1000);\n    setPurchaseTimeout(timeoutId);\n  };\n  const handleAddReservation = () => {\n    const table = tables[selectedTable - 1];\n    if (selectedSpots <= table.capacity && selectedSpots <= 8) {\n      const isVipTicketAlreadyReserved = table.reservations.some(reservation => reservation.ticketTypes.includes('VIP'));\n      if (isVipTicketAlreadyReserved && [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable)) {\n        alert(\"VIP ticket already reserved for this table.\");\n        return;\n      }\n      setShowModal(true);\n      setShowTicketFields(true);\n    } else if (selectedSpots > 8) {\n      alert(\"You can't reserve more than 8 spots for a single table.\");\n    } else {\n      alert(`Only ${table.capacity} spots available for this table.`);\n    }\n    setShowModal(true);\n    setShowTicketFields(true);\n  };\n\n  //const handleStoreData = async () => {\n  //setShowModal(false);\n  //setShowTicketFields(false);\n\n  //if (!buyerName || !buyerSurname) {\n  //alert('Please enter both name and surname.');\n  //return;\n  //}\n\n  //try {\n  //const response = fetch('/storeData', {\n  //method: 'POST',\n  //headers: {\n  //'Content-Type': 'application/',\n  //},\n  //body: JSON.stringify({\n  //buyerName: buyerName,\n  //buyerSurname: buyerSurname,\n  //// Add any other data you want to send to the server\n  //}),\n  //});\n\n  //if (response.ok) {\n  //const result = await response.json();\n  //try{\n  //window.location.href = result.paymentGatewayUrl;\n  //}\n  //catch(e)\n  //{\n  //console.error('Error:', e);\n  //}\n  //} else {\n  //alert('Error storing data Please try again.');\n  //}\n  //} catch (error) {\n  //console.error('Error:', error);\n  //alert('An unexpected error occurred. Please try again later.');\n  //}\n\n  //setReservationText('');\n  //setSelectedSpots(1);\n  //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  //setTotalTicketPrice(0);\n  //clearTimeout(purchaseTimeout);\n  //};\n\n  //const handleCloseModal = async () => {\n  //setShowModal(false);\n  //setShowTicketFields(false);\n\n  //const buyerName = document.getElementById('buyerName').value;\n  //const buyerSurname = document.getElementById('buyerSurname').value;\n\n  //if (!buyerName || !buyerSurname) {\n  //alert('Please enter both name and surname.');\n  //return;\n  //}\n\n  //// Store reservation data in localStorage\n  //const reservationData = {\n  //tableNumber: selectedTable,\n  //reservationText: reservationText,\n  //buyerName: buyerName,\n  //buyerSurname: buyerSurname,\n  //ticketTypes: selectedTicketTypes,\n  //totalTicketPrice: totalTicketPrice,\n  //};\n\n  //// Log the reservation data to the console\n  //console.log('Reservation Data:', reservationData);\n\n  //// Show a confirmation message to the user\n  //alert('Transfering to payment Gateway!');\n\n  //localStorage.setItem('reservationData', JSON.stringify(reservationData)); //??????\n\n  //try {\n  //// Redirect to the payment gateway\n  //const response = await fetch('https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID', {\n  //<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>\n\n  //method: 'POST',\n  //headers: {\n  //'Content-Type': 'application/json',\n  //},\n  //body: JSON.stringify({\n  //// Include any necessary data for the purchase\n  //// Example: reservationData\n  //}),\n  //});\n\n  //if (response.ok) {\n  ////const result = await response.json();\n  ////window.location.href = result.paymentGatewayUrl;\n  //alert('Payment successful.');\n  //} else {\n  //alert('Error initiating purchase. Please try again.');\n  //}\n  //} catch (error) {\n  //console.error('Error:', error);\n  //alert('An unexpected error occurred. Please try again later.');\n  //}\n\n  //setReservationText('');\n  //setSelectedSpots(1);\n  //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  //setTotalTicketPrice(0);\n  //clearTimeout(purchaseTimeout);\n  //};\n\n  const handleCloseModal = async () => {\n    setShowModal(false);\n    setShowTicketFields(false);\n    const buyerName = document.getElementById('buyerName').value;\n    const buyerSurname = document.getElementById('buyerSurname').value;\n    if (!buyerName || !buyerSurname) {\n      alert('Please enter both name and surname.');\n      return;\n    }\n\n    // Store reservation data in state\n    const reservationData = {\n      tableNumber: selectedTable,\n      reservationText: reservationText,\n      buyerName: buyerName,\n      buyerSurname: buyerSurname,\n      ticketTypes: selectedTicketTypes,\n      totalTicketPrice: totalTicketPrice\n    };\n\n    // Update purchased items state\n    setPurchasedItems(prevItems => [...prevItems, reservationData]);\n\n    // Use PayPal SDK to handle payment\n    const paypalScript = document.createElement('script');\n    //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=ATMvY5-1N5sOTVS4mXgjwGSUMnOQD1kjhTClWHpSe95szpUh8rTY-2vWjTDNlrEiAotYpyyR__h2Hcm9&currency=CAD&locale=en_ca`;\n\n    // AYSpzj2tY_WJ6Pw5WCGRX9AnrSoX2Es12cxXyWVVZkASit6zo4LfqGiYIIQoi1ChsWmcpN7UKl4In1Ig --> working sandbox\n    //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=ASD882dz83tzc9b0hWysakdf_2UvhQhoXhoSIHeeTDDkAoyl5vCAqYmY7Tq2cQS_J7zm1H8FWDvUGdIW&buyer-country=CA&currency=CAD`;\n\n    // ASD882dz83tzc9b0hWysakdf_2UvhQhoXhoSIHeeTDDkAoyl5vCAqYmY7Tq2cQS_J7zm1H8FWDvUGdIW --> not working LIVE\n    paypalScript.src = `https://www.paypal.com/sdk/js?client-id=ASD882dz83tzc9b0hWysakdf_2UvhQhoXhoSIHeeTDDkAoyl5vCAqYmY7Tq2cQS_J7zm1H8FWDvUGdIW&currency=CAD`;\n    paypalScript.async = true;\n    paypalScript.onload = () => {\n      handlePayPalPayment();\n    };\n    paypalScript.onerror = () => {\n      console.error('Error loading PayPal SDK');\n      // You can add more detailed error handling here\n    };\n    document.body.appendChild(paypalScript);\n    setReservationText('');\n    setSelectedSpots(1);\n    setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    setTotalTicketPrice(0);\n    clearTimeout(purchaseTimeout);\n  };\n  const handleCloseModalTimeOut = async () => {\n    setShowModal(false);\n    setShowTicketFields(false);\n    clearTimeout(purchaseTimeout);\n  };\n  const handlePrintPurchaseCart = () => {\n    window.print();\n  };\n  const handlePayPalPayment = () => {\n    // Replace 'YOUR_CLIENT_ID' with your PayPal client ID\n    window.paypal.Buttons({\n      createOrder: function (data, actions) {\n        const formattedTotal = totalTicketPrice.toFixed(2); // Format total price with two decimal places\n        return actions.order.create({\n          purchase_units: [{\n            amount: {\n              value: formattedTotal\n            }\n          }]\n        });\n      },\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(function (details) {\n          // Handle the successful payment here\n          alert('Payment successful! Transaction completed by ' + details.payer.name.given_name);\n          // Handle the successful payment here\n          handleShowSuccessModal(); // Show the success modal\n          // Other logic, if needed\n        });\n      },\n      onError: function (err) {\n        // Handle errors here\n        console.error('PayPal error:', err);\n        alert('Payment failed. Please try again.');\n      }\n      //style: {\n      //layout: 'vertical',\n      //color: 'gold',\n      //shape: 'rect',\n      //label: 'paypal',\n      //height: 40,\n      //width: 150,\n      //},\n    }).render('#paypal-button-container');\n  };\n  const calculateTableColor = table => {\n    if (table.capacity === 0) {\n      return 'table-full';\n    } else if (table.capacity <= table.reservations.length) {\n      return 'table-semi-empty';\n    } else {\n      return 'table-empty';\n    }\n  };\n  const getAvailableSeats = table => {\n    return table.capacity - table.reservations.length;\n  };\n\n  //function getAvailableSeats(table) {\n  //// Check if the table is defined and has the expected structure\n  //if (table && typeof table === 'object' && 'capacity' in table) {\n  //const reservedSeats = table.reservations.reduce((total, reservation) => total + reservation.spots, 0);\n  //return table.capacity - reservedSeats;\n  //}\n\n  //// Return a default value if the table is not valid\n  //return 0;\n  //}\n\n  // ... (previous code)\n\n  useEffect(() => {\n    // Calculate the total ticket price including the fee using the utility function\n    const {\n      totalWithFee,\n      trnsfee,\n      feeAmount,\n      totalfee\n    } = calculateTotalWithFee(selectedTicketTypes, ticketPrices, transfeePercentage, feePercentage);\n\n    // Set the total ticket price\n    setTotalTicketPrice(totalWithFee);\n\n    //setFee(feeAmount);\n\n    //setTransFeePercentage(trnsfee);\n\n    //console.log('feePercentage:', feePercentage);\n\n    const timeoutId = setTimeout(() => {\n      handleCloseModalTimeOut();\n      alert('Purchase session expired. Please try again.');\n      // Reload the app when the timer ends\n      window.location.reload();\n    }, remainingTime * 1000);\n\n    //setPurchaseTimeout(timeoutId);\n\n    // Update the remaining time every second\n    const intervalId = setInterval(() => {\n      setRemainingTime(prevTime => prevTime > 0 ? prevTime - 1 : 0);\n    }, 1000);\n    return () => {\n      clearTimeout(timeoutId);\n      clearInterval(intervalId);\n    };\n  }, [selectedTicketTypes, handleCloseModal, ticketPrices, remainingTime, feePercentage]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"mt-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"select-table-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mb-3\",\n              children: \"Select Table:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n                variant: \"primary\",\n                id: \"dropdown-basic\",\n                children: [\"Table \", selectedTable]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n                children: Array.from({\n                  length: 30\n                }).map((_, index) => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                  onClick: () => setSelectedTable(index + 1),\n                  children: [\"Table \", index + 1]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 17\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"enter-seats-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"w-75 mb-3 \",\n              children: \"Enter number of seats:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"selectedSpots\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"number\",\n                placeholder: \"Number of seats\",\n                value: selectedSpots,\n                onChange: e => {\n                  const newValue = e.target.value !== '' ? Math.max(1, parseInt(e.target.value, 10)) : '';\n                  setSelectedSpots(newValue);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            onClick: handleAddReservation,\n            className: \"rectangle-button mb-3\",\n            children: \"Add Reservation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: tables.map((table, tableIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `circle-button task-item ${calculateTableColor(table)}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"table-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(tableIndex + 1) ? `VIP Table ${tableIndex + 1}` : `Table ${tableIndex + 1}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"(\", table.capacity, \" seats)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"reservation-info\",\n              children: table.reservations.map((reservation, index) => /*#__PURE__*/_jsxDEV(Badge, {\n                pill: true,\n                variant: \"info\",\n                className: \"mr-1\",\n                children: [reservation.name, \" (\", reservation.spots, \" spots)\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 505,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 13\n            }, this)]\n          }, tableIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [purchasedItems.length > 0 && /*#__PURE__*/_jsxDEV(PurchaseCart, {\n            purchasedItems: purchasedItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePrintPurchaseCart,\n            children: \"Print Purchase Cart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 4\n        }, this), purchasedItems.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rectangle-layout mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"mb-3 \",\n            children: \"Purchase Cart:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: purchasedItems.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"w-100 col col-lg-2\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [\"Table \", item.tableNumber, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 15\n                }, this), \" \", item.reservationText, \", \", item.buyerName, \" \", item.buyerSurname, \", Tickets: \", item.ticketTypes.join(', '), \", Total Price: $\", item.totalTicketPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 6\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 13\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 528,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"paypal-button-container\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showModal,\n      onHide: handleCloseModal,\n      dialogClassName: \"custom-modal\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: [\"Select Tickets - Table \", selectedTable, \" (\", getAvailableSeats(tables[selectedTable - 1]), \" available seats)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: showTicketFields && /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"Note: Tickets are non-refundable.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"warning\",\n            children: \"Note: All fields must be completed.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 566,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerSurname\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 570,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter your surname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 571,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"buyerEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 575,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter your email\",\n              onChange: e => {\n                const emailValue = e.target.value.trim();\n                // Validate email using a regular expression\n                const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                if (emailPattern.test(emailValue) || emailValue === '') {\n                  // Valid email or empty string\n                  setBuyerEmail(emailValue);\n                } else {\n                  // Invalid email\n                  // You can display an error message or take other actions\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 13\n          }, this), [...Array(selectedSpots)].map((_, index) => /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: `ticketType-${index + 1}`,\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: `Ticket Type for Seat ${index + 1}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-2\",\n                children: `Price: $${ticketPrices[selectedTicketTypes[index]]}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                value: selectedTicketTypes[index],\n                onChange: e => handleTicketTypeChange(e.target.value, index),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"select\",\n                  children: \"Select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"standard\",\n                  children: \"Standard ($100)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"VIP\",\n                  children: \"VIP ($120)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"student\",\n                  children: \"Student ($85)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"kids\",\n                  children: \"Kids ($60)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Notes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Transcation Fee: $\", totalTicketPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 619,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"Total Ticket Price + Fee: $\", totalTicketPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 621,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 616,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn btn-secondary\",\n          onClick: () => {\n            resetState();\n            setShowModal(false);\n          },\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"success\",\n          onClick: handleCloseModal,\n          children: \"Add to CART\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"countdown-timer\",\n          children: [\"Time Remaining: \", Math.floor(remainingTime / 60), \":\", (remainingTime % 60).toString().padStart(2, '0')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 550,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      show: showSuccessModal,\n      onHide: handleCloseSuccessModal,\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Payment Successful!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Transaction completed by \", details.payer.name.given_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Transaction ID: \", details.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 647,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"secondary\",\n          onClick: handleCloseSuccessModal,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 653,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 643,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"rZ4/OH39viFY48lsnOvorzm6XOo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Container","Form","Button","Badge","Dropdown","Modal","Alert","PayPalButton","PurchaseCart","calculateTotalWithFee","jsxDEV","_jsxDEV","App","_s","tables","setTables","Array","from","length","reservations","capacity","capturedDetails","setCapturedDetails","reservationText","setReservationText","selectedTable","setSelectedTable","selectedSpots","setSelectedSpots","showModal","setShowModal","selectedTicketTypes","setSelectedTicketTypes","fill","showTicketFields","setShowTicketFields","totalTicketPrice","setTotalTicketPrice","purchaseTimeout","setPurchaseTimeout","remainingTime","setRemainingTime","fee","setFee","feePercentage","setFeePercentage","transfeePercentage","setTransFeePercentage","buyerEmail","setBuyerEmail","newTotalTicketPrice","setNewTotalTicketPrice","purchasedItems","setPurchasedItems","resetState","ticketPrices","standard","VIP","student","kids","handleCaptureDetails","details","console","log","handleTicketTypeChange","type","index","updatedTicketTypes","isVipTable","includes","alert","reduce","total","t","clearTimeout","timeoutId","setTimeout","handleCloseModal","window","location","reload","handleAddReservation","table","isVipTicketAlreadyReserved","some","reservation","ticketTypes","buyerName","document","getElementById","value","buyerSurname","reservationData","tableNumber","prevItems","paypalScript","createElement","src","async","onload","handlePayPalPayment","onerror","error","body","appendChild","handleCloseModalTimeOut","handlePrintPurchaseCart","print","paypal","Buttons","createOrder","data","actions","formattedTotal","toFixed","order","create","purchase_units","amount","onApprove","capture","then","payer","name","given_name","handleShowSuccessModal","onError","err","render","calculateTableColor","getAvailableSeats","totalWithFee","trnsfee","feeAmount","totalfee","intervalId","setInterval","prevTime","clearInterval","className","children","class","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","id","Menu","map","_","Item","onClick","Group","controlId","Control","placeholder","onChange","e","newValue","target","Math","max","parseInt","tableIndex","pill","spots","item","join","show","onHide","dialogClassName","Header","closeButton","Title","Body","Label","emailValue","trim","emailPattern","test","as","Footer","floor","toString","padStart","showSuccessModal","handleCloseSuccessModal","_c","$RefreshReg$"],"sources":["/Users/attari.v/Documents/GitHub/Event-Top/client/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState, useEffect } from 'react';\nimport { Container, Form, Button, Badge, Dropdown, Modal, Alert } from 'react-bootstrap';\nimport './App.css';\nimport PayPalButton from './PayPalButton';\nimport PurchaseCart from './PurchaseCart';\n\n//import ReactDOM from 'react-dom';\nimport { calculateTotalWithFee } from './utils';\n\nfunction App() {\n  const [tables, setTables] = useState(Array.from({ length: 30 }, () => ({ reservations: [], capacity: 8 })));\n\n  //const [tables, setTables] = useState([]);\n\n  //useEffect(() => {\n    //// Load table data from the JSON file\n    //const loadTableData = async () => {\n      //try {\n        //const response = await fetch('tablesData.json'); // Update with the correct path\n        //const data = await response.json();\n        //setTables(data);\n      //} catch (error) {\n        //console.error('Error loading table data:', error);\n      //}\n    //};\n    \n  //loadTableData();\n  //}, []); // Run this effect only once on component mount\n\n  const [capturedDetails, setCapturedDetails] = useState(null);\n\n  const [reservationText, setReservationText] = useState('');\n  const [selectedTable, setSelectedTable] = useState(1);\n  const [selectedSpots, setSelectedSpots] = useState(1);\n  const [showModal, setShowModal] = useState(false);\n  //const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(1).fill('standard'));\n  const [selectedTicketTypes, setSelectedTicketTypes] = useState(Array(selectedSpots).fill('select'));\n  const [showTicketFields, setShowTicketFields] = useState(false);\n  const [totalTicketPrice, setTotalTicketPrice] = useState(0);\n  const [purchaseTimeout, setPurchaseTimeout] = useState(null);\n\n  const [remainingTime, setRemainingTime] = useState(10 * 60); // 5 minutes in seconds\n  const [fee, setFee] = useState(0);\n  const [feePercentage, setFeePercentage] = useState(6); // Set your desired fee percentage here\n  const [transfeePercentage, setTransFeePercentage] = useState(2.9); // Set your desired fee percentage here\n\n   // Assuming you have a state variable and its setter function for buyer's email\n  const [buyerEmail, setBuyerEmail] = useState('');  \n\n  // Initialize newTotalTicketPrice state\n  const [newTotalTicketPrice, setNewTotalTicketPrice] = useState(0);\n  const [purchasedItems, setPurchasedItems] = useState([]);\n\n  const resetState = () => {\n    setTables(Array.from({ length: 30 }, () => ({ reservations: [], capacity: 8 })));\n    setReservationText('');\n    setSelectedTable(1);\n    setSelectedSpots(1);\n    setShowModal(false);\n    setSelectedTicketTypes(Array(1).fill('select'));\n    setShowTicketFields(false);\n    setTotalTicketPrice(0);\n    setPurchaseTimeout(null);\n    setRemainingTime(10 * 60);\n    setFee(0);\n    setFeePercentage(6);\n    setTransFeePercentage(2.9);\n    setNewTotalTicketPrice(0);\n  };  \n  \n  const ticketPrices = {\n    standard: 100,\n    VIP: 120,\n    student: 1,\n    kids: 1,\n  };\n\n  const handleCaptureDetails = (details) => {\n    // Handle the captured details as needed\n    console.log('Captured PayPal Details:', details);\n    setCapturedDetails(details);\n\n    // You can perform additional actions here, such as updating state or making API calls\n  };\n\n\nconst handleTicketTypeChange = (type, index) => {\n  const updatedTicketTypes = [...selectedTicketTypes];\n  \n  // Check if the selected table is in the specified range\n  const isVipTable = [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable);\n\n  // If the selected table is a VIP table, force the ticket type to be VIP\n  if (isVipTable && type !== 'VIP') {\n    alert('Only VIP tickets are allowed for this table.');\n    updatedTicketTypes[index] = 'VIP';\n  } else {\n    updatedTicketTypes[index] = type;\n  }\n\n  setSelectedTicketTypes(updatedTicketTypes);\n\n  const newTotalTicketPrice = updatedTicketTypes.reduce((total, t) => total + ticketPrices[t], 0);\n  setTotalTicketPrice(newTotalTicketPrice);\n\n  clearTimeout(purchaseTimeout);\n  const timeoutId = setTimeout(() => {\n    handleCloseModal();\n    // Reload the app when the timer ends\n    alert('Purchase session expired. Please try again.');\n    window.location.reload();\n  }, remainingTime * 1000);\n  setPurchaseTimeout(timeoutId);\n};\n\nconst handleAddReservation = () => {\n  const table = tables[selectedTable - 1];\n\n  if (selectedSpots <= table.capacity && selectedSpots <= 8) {\n    const isVipTicketAlreadyReserved = table.reservations.some(reservation =>\n      reservation.ticketTypes.includes('VIP')\n    );\n\n    if (isVipTicketAlreadyReserved && [1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(selectedTable)) {\n      alert(\"VIP ticket already reserved for this table.\");\n      return;\n    }\n\n    setShowModal(true);\n    setShowTicketFields(true);\n  } else if (selectedSpots > 8) {\n    alert(\"You can't reserve more than 8 spots for a single table.\");\n  } else {\n    alert(`Only ${table.capacity} spots available for this table.`);\n  }\n\n    setShowModal(true);\n    setShowTicketFields(true);\n};\n\n\n  \n  \n  \n\n  //const handleStoreData = async () => {\n    //setShowModal(false);\n    //setShowTicketFields(false);\n    \n    //if (!buyerName || !buyerSurname) {\n      //alert('Please enter both name and surname.');\n      //return;\n    //}\n    \n    //try {\n      //const response = fetch('/storeData', {\n        //method: 'POST',\n        //headers: {\n          //'Content-Type': 'application/',\n        //},\n        //body: JSON.stringify({\n          //buyerName: buyerName,\n          //buyerSurname: buyerSurname,\n          //// Add any other data you want to send to the server\n        //}),\n      //});\n      \n      //if (response.ok) {\n        //const result = await response.json();\n        //try{\n\t\t\t//window.location.href = result.paymentGatewayUrl;\n\t\t//}\n\t\t//catch(e)\n\t\t//{\n\t\t//console.error('Error:', e);\n\t\t//}\n      //} else {\n        //alert('Error storing data Please try again.');\n      //}\n    //} catch (error) {\n      //console.error('Error:', error);\n      //alert('An unexpected error occurred. Please try again later.');\n    //}\n    \n    //setReservationText('');\n    //setSelectedSpots(1);\n    //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    //setTotalTicketPrice(0);\n    //clearTimeout(purchaseTimeout);\n  //};\n\n\n  //const handleCloseModal = async () => {\n    //setShowModal(false);\n    //setShowTicketFields(false);\n\n\t//const buyerName = document.getElementById('buyerName').value;\n\t//const buyerSurname = document.getElementById('buyerSurname').value;\n\n    //if (!buyerName || !buyerSurname) {\n      //alert('Please enter both name and surname.');\n      //return;\n    //}\n\n    //// Store reservation data in localStorage\n    //const reservationData = {\n      //tableNumber: selectedTable,\n      //reservationText: reservationText,\n      //buyerName: buyerName,\n      //buyerSurname: buyerSurname,\n      //ticketTypes: selectedTicketTypes,\n      //totalTicketPrice: totalTicketPrice,\n    //};\n\n    //// Log the reservation data to the console\n    //console.log('Reservation Data:', reservationData);\n\n    //// Show a confirmation message to the user\n    //alert('Transfering to payment Gateway!');\n\n    //localStorage.setItem('reservationData', JSON.stringify(reservationData)); //??????\n\n    //try {\n      //// Redirect to the payment gateway\n      //const response = await fetch('https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID', {\n\t\t  //<script src=\"https://www.paypal.com/sdk/js?client-id=YOUR_CLIENT_ID\"></script>\n\n        //method: 'POST',\n        //headers: {\n          //'Content-Type': 'application/json',\n        //},\n        //body: JSON.stringify({\n          //// Include any necessary data for the purchase\n          //// Example: reservationData\n        //}),\n      //});\n\n      //if (response.ok) {\n        ////const result = await response.json();\n        ////window.location.href = result.paymentGatewayUrl;\n        //alert('Payment successful.');\n      //} else {\n        //alert('Error initiating purchase. Please try again.');\n      //}\n    //} catch (error) {\n      //console.error('Error:', error);\n      //alert('An unexpected error occurred. Please try again later.');\n    //}\n\n    //setReservationText('');\n    //setSelectedSpots(1);\n    //setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n    //setTotalTicketPrice(0);\n    //clearTimeout(purchaseTimeout);\n  //};\n  \n  \n  \n\n\nconst handleCloseModal = async () => {\n  setShowModal(false);\n  setShowTicketFields(false);\n\n  const buyerName = document.getElementById('buyerName').value;\n  const buyerSurname = document.getElementById('buyerSurname').value;\n\n  if (!buyerName || !buyerSurname) {\n    alert('Please enter both name and surname.');\n    return;\n  }\n\n    // Store reservation data in state\n    const reservationData = {\n      tableNumber: selectedTable,\n      reservationText: reservationText,\n      buyerName: buyerName,\n      buyerSurname: buyerSurname,\n      ticketTypes: selectedTicketTypes,\n      totalTicketPrice: totalTicketPrice,\n    };\n\n\n    // Update purchased items state\n    setPurchasedItems((prevItems) => [...prevItems, reservationData]);\n\n  // Use PayPal SDK to handle payment\n  const paypalScript = document.createElement('script');\n  //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=ATMvY5-1N5sOTVS4mXgjwGSUMnOQD1kjhTClWHpSe95szpUh8rTY-2vWjTDNlrEiAotYpyyR__h2Hcm9&currency=CAD&locale=en_ca`;\n\n\n  // AYSpzj2tY_WJ6Pw5WCGRX9AnrSoX2Es12cxXyWVVZkASit6zo4LfqGiYIIQoi1ChsWmcpN7UKl4In1Ig --> working sandbox\n  //paypalScript.src = `https://www.paypal.com/sdk/js?client-id=ASD882dz83tzc9b0hWysakdf_2UvhQhoXhoSIHeeTDDkAoyl5vCAqYmY7Tq2cQS_J7zm1H8FWDvUGdIW&buyer-country=CA&currency=CAD`;\n\n  // ASD882dz83tzc9b0hWysakdf_2UvhQhoXhoSIHeeTDDkAoyl5vCAqYmY7Tq2cQS_J7zm1H8FWDvUGdIW --> not working LIVE\n  paypalScript.src = `https://www.paypal.com/sdk/js?client-id=ASD882dz83tzc9b0hWysakdf_2UvhQhoXhoSIHeeTDDkAoyl5vCAqYmY7Tq2cQS_J7zm1H8FWDvUGdIW&currency=CAD`;\n  paypalScript.async = true;\n  paypalScript.onload = () => {\n    handlePayPalPayment();\n  };\n\tpaypalScript.onerror = () => {\n\t  console.error('Error loading PayPal SDK');\n\t  // You can add more detailed error handling here\n\t};\n  document.body.appendChild(paypalScript);\n    \n  setReservationText('');\n  setSelectedSpots(1);\n  setSelectedTicketTypes(Array(selectedSpots).fill('standard'));\n  setTotalTicketPrice(0);\n  clearTimeout(purchaseTimeout);\n};\n\n\nconst handleCloseModalTimeOut = async () => {\n  setShowModal(false);\n  setShowTicketFields(false);\n\n  clearTimeout(purchaseTimeout);\n};\n\nconst handlePrintPurchaseCart = () => {\n  window.print();\n};\n\n\nconst handlePayPalPayment = () => {\n  // Replace 'YOUR_CLIENT_ID' with your PayPal client ID\n  window.paypal\n    .Buttons({\n      createOrder: function (data, actions) {\n        const formattedTotal = totalTicketPrice.toFixed(2); // Format total price with two decimal places\n        return actions.order.create({\n          purchase_units: [\n            {\n              amount: {\n                value: formattedTotal,\n              },\n            },\n          ],\n        });\n      },\n      onApprove: function (data, actions) {\n        return actions.order.capture().then(function (details) {\n          // Handle the successful payment here\n          alert('Payment successful! Transaction completed by ' + details.payer.name.given_name);\n          // Handle the successful payment here\n          handleShowSuccessModal(); // Show the success modal\n          // Other logic, if needed\n\n        });\n      },\n      onError: function (err) {\n        // Handle errors here\n        console.error('PayPal error:', err);\n        alert('Payment failed. Please try again.');\n      }\n      //style: {\n        //layout: 'vertical',\n        //color: 'gold',\n        //shape: 'rect',\n        //label: 'paypal',\n        //height: 40,\n        //width: 150,\n      //},\n    })\n    .render('#paypal-button-container');\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n  const calculateTableColor = (table) => {\n    if (table.capacity === 0) {\n      return 'table-full';\n    } else if (table.capacity <= table.reservations.length) {\n      return 'table-semi-empty';\n    } else {\n      return 'table-empty';\n    }\n  };\n\n  const getAvailableSeats = (table) => {\n    return table.capacity - table.reservations.length;\n  };\n\n//function getAvailableSeats(table) {\n  //// Check if the table is defined and has the expected structure\n  //if (table && typeof table === 'object' && 'capacity' in table) {\n    //const reservedSeats = table.reservations.reduce((total, reservation) => total + reservation.spots, 0);\n    //return table.capacity - reservedSeats;\n  //}\n\n  //// Return a default value if the table is not valid\n  //return 0;\n//}\n\n// ... (previous code)\n\nuseEffect(() => {\n\n  // Calculate the total ticket price including the fee using the utility function\n  const { totalWithFee, trnsfee, feeAmount, totalfee } = calculateTotalWithFee(selectedTicketTypes, ticketPrices, transfeePercentage, feePercentage);\n\n  // Set the total ticket price\n  setTotalTicketPrice(totalWithFee);\n\n  //setFee(feeAmount);\n\n  //setTransFeePercentage(trnsfee);\n  \n  //console.log('feePercentage:', feePercentage);\n\n  const timeoutId = setTimeout(() => {\n    handleCloseModalTimeOut();\n    alert('Purchase session expired. Please try again.');\n    // Reload the app when the timer ends\n    window.location.reload();\n  }, remainingTime * 1000);\n  \n  //setPurchaseTimeout(timeoutId);\n\n  // Update the remaining time every second\n  const intervalId = setInterval(() => {\n    setRemainingTime((prevTime) => (prevTime > 0 ? prevTime - 1 : 0));\n  }, 1000);\n\n  return () => {\n    clearTimeout(timeoutId);\n    clearInterval(intervalId);\n  };\n}, [selectedTicketTypes, handleCloseModal, ticketPrices, remainingTime, feePercentage]);\n\n\n\n\nreturn (\n  <Container className=\"mt-3\">\n\n\n  <div class=\"row\">\n    <div class=\"col-6\">\n    \n    <Form>\n        {/* Select Table section */}\n        <div className=\"select-table-section\">\n          <h5 className=\"mb-3\">Select Table:</h5>\n          <Dropdown>\n            <Dropdown.Toggle variant=\"primary\" id=\"dropdown-basic\">\n              Table {selectedTable}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              {Array.from({ length: 30 }).map((_, index) => (\n                <Dropdown.Item key={index} onClick={() => setSelectedTable(index + 1)}>\n                  Table {index + 1}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n        </div>\n        {/* Enter number of seats section */}\n        <div className=\"enter-seats-section\">\n          <h5 className=\"w-75 mb-3 \">Enter number of seats:</h5>\n          <Form.Group controlId=\"selectedSpots\">\n            <Form.Control\n              type=\"number\"\n              placeholder=\"Number of seats\"\n              value={selectedSpots}\n              onChange={(e) => {\n                const newValue = e.target.value !== '' ? Math.max(1, parseInt(e.target.value, 10)) : '';\n                setSelectedSpots(newValue);\n              }}\n            />\n          </Form.Group>\n        </div>\n        {/* Button to add reservation */}\n        <Button variant=\"primary\" onClick={handleAddReservation} className=\"rectangle-button mb-3\">\n          Add Reservation\n        </Button>\n      </Form>\n      {/* Task list */}\n      {/* Task list */}\n      {/* Task list */}\n      <div className=\"task-list\">\n        {tables.map((table, tableIndex) => (\n          <div key={tableIndex} className={`circle-button task-item ${calculateTableColor(table)}`}>\n            {/* Seat Capacity */}\n            <div className=\"table-info\">\n              <strong>{[1, 2, 3, 4, 5, 16, 17, 18, 19, 20].includes(tableIndex + 1) ? `VIP Table ${tableIndex + 1}` : `Table ${tableIndex + 1}`}</strong>\n              <span>({table.capacity} seats)</span>\n            </div>\n            {/* Reservations */}\n            <div className=\"reservation-info\">\n              {table.reservations.map((reservation, index) => (\n                <Badge key={index} pill variant=\"info\" className=\"mr-1\">\n                  {reservation.name} ({reservation.spots} spots)\n                </Badge>\n              ))}\n            </div>\n          </div>\n        ))}\n      </div>\n    \n    \n    </div>\n    <div class=\"col-6\">\n\n\t  <div>\n\t\t{/* Other components and content */}\n\t\t{purchasedItems.length > 0 && <PurchaseCart purchasedItems={purchasedItems} />}\n\t\t{/* Other components and content */}\n\t\t<button onClick={handlePrintPurchaseCart}>Print Purchase Cart</button>\n\t  </div>\n    \n    {purchasedItems.length > 0 && (\n      <div className=\"rectangle-layout mt-3\">\n        <h4 className=\"mb-3 \">Purchase Cart:</h4>\n        <ul>\n          {purchasedItems.map((item, index) => (\n            <li key={index}>\n\t\t\t  <h6 className=\"w-100 col col-lg-2\">\n              <strong>Table {item.tableNumber}:</strong> {item.reservationText}, {item.buyerName} {item.buyerSurname}, Tickets: {item.ticketTypes.join(', ')}, Total Price: ${item.totalTicketPrice}\n\t\t\t  </h6>\n            </li>\n          ))}\n        </ul>\n      </div>\n    )}\n\n    {/* Additional container for PayPal button */}\n    <div id=\"paypal-button-container\"></div>\n    \n    \n        \n    </div>\n  </div>\n\n\n    {/* Reservation modal */}\n    <Modal show={showModal} onHide={handleCloseModal} dialogClassName=\"custom-modal\">\n      <Modal.Header closeButton>\n        <Modal.Title>\n          Select Tickets - Table {selectedTable} ({getAvailableSeats(tables[selectedTable - 1])} available seats)\n        </Modal.Title>\n      </Modal.Header>\n      {/* Modal body */}\n      <Modal.Body>\n        {showTicketFields && (\n          <Form>\n            {/* Alert */}\n            <Alert variant=\"warning\">Note: Tickets are non-refundable.</Alert>\n            <Alert variant=\"warning\">Note: All fields must be completed.</Alert>\n            {/* Buyer's name input */}\n            <Form.Group controlId=\"buyerName\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter your name\" />\n            </Form.Group>\n            {/* Buyer's surname input */}\n            <Form.Group controlId=\"buyerSurname\">\n              <Form.Label>Surname</Form.Label>\n              <Form.Control type=\"text\" placeholder=\"Enter your surname\" />\n            </Form.Group>\n            {/* Buyer's EMAIL input */}\n            <Form.Group controlId=\"buyerEmail\">\n              <Form.Label>Email</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                onChange={(e) => {\n                  const emailValue = e.target.value.trim();\n                  // Validate email using a regular expression\n                  const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                  if (emailPattern.test(emailValue) || emailValue === '') {\n                    // Valid email or empty string\n                    setBuyerEmail(emailValue);\n                  } else {\n                    // Invalid email\n                    // You can display an error message or take other actions\n                  }\n                }}\n              />\n            </Form.Group>\n\n            {/* Ticket type selection for each seat */}\n            {[...Array(selectedSpots)].map((_, index) => (\n              <Form.Group key={index} controlId={`ticketType-${index + 1}`}>\n                <Form.Label>{`Ticket Type for Seat ${index + 1}`}</Form.Label>\n                <div className=\"d-flex align-items-center\">\n                  <span className=\"mr-2\">{`Price: $${ticketPrices[selectedTicketTypes[index]]}`}</span>\n                  {/* Dropdown for selecting ticket type */}\n                  <Form.Control\n                    as=\"select\"\n                    value={selectedTicketTypes[index]}\n                    onChange={(e) => handleTicketTypeChange(e.target.value, index)}\n                  >\n                    <option value=\"select\">Select</option>\n                    <option value=\"standard\">Standard ($100)</option>\n                    <option value=\"VIP\">VIP ($120)</option>\n                    <option value=\"student\">Student ($85)</option>\n                    <option value=\"kids\">Kids ($60)</option>\n                  </Form.Control>\n                </div>\n              </Form.Group>\n            ))}\n            {/* Notes section */}\n            <div className=\"mt-3\">\n              <strong>Notes:</strong>\n              <ul>\n                <li>Transcation Fee: ${totalTicketPrice}</li>\n                {/* <li>Fee (6%): ${totalTicketPrice}</li> */}\n                <li>Total Ticket Price + Fee: ${totalTicketPrice}</li>\n              </ul>\n            </div>\n          </Form>\n        )}\n        {/* PayPal button container */}\n        {/* <div id=\"paypal-button-container\"></div> */}\n      </Modal.Body>\n      {/* Modal footer */}\n      <Modal.Footer>\n        {/* Close button */}\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={() => { resetState(); setShowModal(false); }}>\n          Close\n        </button>\n        {/* Purchase button */}\n        <Button variant=\"success\" onClick={handleCloseModal}>\n          Add to CART\n        </Button>\n        {/* Countdown timer */}\n        <div className=\"countdown-timer\">Time Remaining: {Math.floor(remainingTime / 60)}:{(remainingTime % 60).toString().padStart(2, '0')}</div>\n      </Modal.Footer>\n    </Modal>\n<Modal show={showSuccessModal} onHide={handleCloseSuccessModal}>\n  <Modal.Header closeButton>\n    <Modal.Title>Payment Successful!</Modal.Title>\n  </Modal.Header>\n  <Modal.Body>\n    <p>Transaction completed by {details.payer.name.given_name}</p>\n    <p>Transaction ID: {details.id}</p>\n    {/* Add any additional information you want to display */}\n  </Modal.Body>\n  <Modal.Footer>\n    <Button variant=\"secondary\" onClick={handleCloseSuccessModal}>\n      Close\n    </Button>\n  </Modal.Footer>\n</Modal>\n\n\n  </Container>\n);\n\n\n\n\n\n\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}